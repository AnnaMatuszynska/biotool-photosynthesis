# PHOTOSYNTHESIS IN SILICO.
# Copyright (C) 2023 Computational Life Science RWTH Aachen
# Sarah Philipps et al., 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-12-02 17:21+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: This can be copied to add new text entries with translations
msgid "INSERT_PLACEHOLDER_HERE"
msgstr ""

msgid "SDE_PREVIOUS"
msgstr "Vorherige Seite"

msgid "SDE_NEXT"
msgstr "Nächste Seite"

msgid "SDE_SIDEBAR_SETTINGS"
msgstr "Einstellungen"

msgid "SDE_SIDEBAR_VERSION"
msgstr "Version"

msgid "SDE_SIDEBAR_LANGUAGE"
msgstr "Sprache"

#: Start.py:92
msgid "SDE_PAGENAMES_START"
msgstr "Start"

#: Start.py:97
msgid "SDE_PAGENAMES_PHOTOSYNTHESIS"
msgstr "Photosynthese"

#: Start.py:102
msgid "SDE_PAGENAMES_MEASURINGMETHOD"
msgstr "Messverfahren"

#: Start.py:107
msgid "SDE_PAGENAMES_COMPUTATIONALMODELS"
msgstr "Computergestützte Modelle"

#: Start.py:112
msgid "SDE_PAGENAMES_EXPERIMENTSINSILICO"
msgstr "Experimente in silico"

#: Start.py:117
msgid "SDE_PAGENAMES_PLANTLIGHTMEMORY"
msgstr "Lichtgedächtnis der Pflanze"

#: Start.py:122
msgid "SDE_PAGENAMES_CONCLUSION"
msgstr "Schlussfolgerungen"

#: Start.py:117
msgid "SDE_PAGENAMES_CONTACT"
msgstr "Kontakt"

#: pages/_sidebar.py:77
msgid "SDE_LANGUAGE_EN"
msgstr "Englisch"

#: pages/_sidebar.py:77
msgid "SDE_LANGUAGE_DE"
msgstr "Deutsch"

#: pages/_sidebar.py:77
msgid "SDE_LANGUAGE_PL"
msgstr "Polnisch"

#: pages/_sidebar.py:77
msgid "SDE_LANGUAGE_FR"
msgstr "Französisch"

#: Start.py:41
#: pages/first_analysis.py:459
#: pages/method.py:69
#: pages/model_explain.py:419
#: pages/photosynthesis.py:74
#: pages/plant_memory.py:401
msgid "LITERATURE"
msgstr "Literatur"

#: Start.py:42
#: pages/first_analysis.py:460
#: pages/model_explain.py:420
#: pages/photosynthesis.py:75
#: pages/plant_memory.py:402
msgid "LITERATURE_ONPAGE"
msgstr "Referenzen auf dieser Seite:"

msgid "LITERATURE_PLANTS_AND_PYTHON"
msgstr "Schaue dir auch *Plants and Python* an, ein Python-Kurs für Biologen:\n"
            "- Plants & Python: A series of lessons in coding, plant biology, computation, and bioinformatics. (2022). The Plant Cell, 34(7), e1. https://doi.org/10.1093/plcell/koac187\n"
            "- Offizielle Website: https://plantsandpython.github.io/PlantsAndPython"

#: pages/first_analysis.py:345
#: pages/plant_memory.py:249
msgid "SLIDER_LIGHT"
msgstr "Lichtintensität der Lichtphase (AL) in μmol&nbsp;m⁻²&nbsp;s⁻¹"

#: pages/first_analysis.py:361
#: pages/plant_memory.py:255
msgid "SLIDER_PULSES"
msgstr "Sekunden zwischen Sättigungsimpulsen während der Lichtphase"

#: pages/first_analysis.py:371
#: pages/plant_memory.py:272
msgid "SLIDER_ACTIVATION"
msgstr "Umwandlungsrate zu Zeaxanthin (CtZ) in Prozent des Standardwerts"

#: pages/first_analysis.py:380
#: pages/plant_memory.py:278
msgid "SLIDER_DEACTIVATION"
msgstr "Umwandlungsrate zu Violaxanthin (CtV) in Prozent des Standardwerts"

# Grammarly checked
#: Start.py:14
#: pages/contact.py:68
#: Start.py:14
#: pages/contact.py:68
msgid "PROGRAMS_USED"
msgstr "Diese Webseite wurde erstellt mit **Streamlit**: https://streamlit.io/.\n\nManche Grafiken wurden erstellt mit **BioRender**: https://biorender.com."

#: pages/first_analysis.py:402
#: pages/plant_memory.py:297
msgid "SPINNER"
msgstr "Ich rechne kurz für dich :computer:"

#: pages/first_analysis.py:420
#: pages/first_analysis.py:432
#: pages/plant_memory.py:315
#: pages/plant_memory.py:344
#: pages/plant_memory.py:359
msgid "AXIS_TIME_MIN"
msgstr "Zeit [min]"

#: pages/first_analysis.py:419
#: pages/first_analysis.py:431
#: pages/plant_memory.py:314
#: pages/plant_memory.py:343
#: pages/plant_memory.py:358
msgid "AXIS_TIME_S"
msgstr "Zeit [s]"

#: pages/first_analysis.py:421
#: pages/first_analysis.py:433
#: pages/plant_memory.py:316
msgid "FLUO"
msgstr "Rel. Fluoreszenz (F/Fₘ) [a.u.]"

#: pages/first_analysis.py:433
#: pages/plant_memory.py:345
msgid "AXIS_NPQ"
msgstr "NPQ [a.u.]"

#: pages/first_analysis.py:433
#: pages/plant_memory.py:360
msgid "AXIS_PHIPSII"
msgstr "Φ(PSII)"

#: pages/first_analysis.py:489
msgid "NEW_LABEL"
msgstr "Neu"

#: pages/first_analysis.py:489
msgid "OLD_LABEL"
msgstr "Alt"

# SIDEBAR
#: pages/_sidebar.py:14
msgid "SDE_4BIO"
msgstr "4Bio"

#: pages/_sidebar.py:14
msgid "SDE_4MATH"
msgstr "4Math"

#: pages/_sidebar.py:14
msgid "VIDEO_TRANSCRIPT_SWITCH"
msgstr "Video Transkripte anzeigen"

#: pages/_sidebar.py:14
msgid "EXPANDER_VIDEO_TRANSCRIPT"
msgstr "Video Transkript"


#: Start.py:12
msgid "STR_EXPANDER_ABOUT"
msgstr "Über diese Webseite"

# Grammarly checked
#: Start.py:13
msgid "STR_EXPLANATION_ABOUT"
msgstr "Diese Website ist online verfügbar und direkt nutzbar unter <https://annamatuszynska-biotool-photosynthesis-start-wrd4lw.streamlit.app/>. Außerdem kann der gesamte Quellcode von GitHub unter <https://github.com/AnnaMatuszynska/biotool-photosynthesis> heruntergeladen und (offline) lokal ausgeführt werden. Informationen zum Herunterladen und Ausführen des Programms findest du in der Datei 'README.md' auf GitHub."

#: Start.py:9
msgid "STR_HEADLINE_MAIN"
msgstr "# Photosynthese *in silico*: ein interaktives Dashboard zur Untersuchung der Photosynthese anhand eines Computermodells."

#: Intro by Anna
# Grammarly checked
#: Start.py:10
msgid "STR_INTRO"
msgstr "Willkommen zu unserem Teaching Tool für den Biologieunterricht, einem Projekt des **Computational Life Science Lab** an der RWTH Aachen. Unser Ziel ist es, ein Lehrmaterial zur Verfügung zu stellen, das den Bedürfnissen der Schüler:innen des 21. Jahrhunderts entspricht. Wir wollen zeigen, wie computergestützte Modellierung die aktuelle Forschung unterstützt, um unser Verständnis für die Funktionsweise der Welt zu verbessern. Wir haben die Photosynthese als DEN Prozess ausgewählt, um dies zu demonstrieren. Schließlich ist die Fotosynthese der wohl wichtigste Prozess auf der Erde! Beginne dein Abenteuer mit diesem interaktiven Dashboard, indem du dir den Prozess der Photosynthese anhörst."

# Grammarly checked
#: Start.py:18
msgid "STR_HEADLINE_USAGE"
msgstr "## Nutzung dieser Website"

# Grammarly checked
#: Start.py:19
msgid "STR_USAGE"
msgstr "Wir richten uns sowohl an neugierige Neulinge als auch an Fortgeschrittene Lernende. Auf der linken Seite kannst du aus einer Drop-down Liste zwischen zwei Versionen dieser Website wählen: <a href='#' id='4Bio'><i>4Bio</i></a>, wenn du dich mit der Biologie sicherer fühlst, oder <i>4Math</i>, wenn du die mathematischen Hintergründe näher erkunden willst.<br>Auf dieser Webseite findest du auch Videos. Falls du die Video Transkripte ansehen möchtest, wähle <i>Video Transkripte anzeigen</i> auf der linken Seite aus."

# Grammarly checked
#: Start.py:20
msgid "STR_SPECIFIC_USE"
msgstr "In dieser *4Math*-Version fassen wir den biologischen Hintergrund zusammen, den du kennen musst, um die Modelle auf dieser Webseite zu verstehen. Wir werden dir mehrere Beispiele von Modellen geben, die entwickelt wurden, um verschiedene Aspekte der Photosynthese zu erfassen, um zu zeigen, wie nützlich die Modellierung für die Biologie sein kann. Wir werden auch ein Modell im Detail erklären und zeigen, wie es mathematisch definiert und in Python implementiert ist, damit du es selbst ausprobieren kannst."

msgid "STR_VIDEO_TRANSCRIPT_INTRODUCTION"
msgstr "Die Photosynthese ist das, was diese Welt am Laufen hält. Von der Luft, die du atmest, bis zu den Lebensmitteln, die du isst, ist letztlich alles dank Licht von Pflanzen, Algen und kleineren Zellen erzeugt worden. Wenn man das weiß, versteht man, wie wichtig es ist, zu begreifen, wie die Fotosynthese funktioniert. Wenn wir diesen Prozess genau kennen würden, könnten wir ihn künstlich verbessern und bei der Produktion von Lebensmitteln, Treibstoff und vielen anderen Chemikalien helfen, die wir in unserem Leben brauchen."

msgid "STR_LEARNING_OBJECTIVES_HEADER"
msgstr "### Lernziele\n"
        "Was wir hoffen, dass du mit der *4Math*-Version lernen wirst:"


msgid "STR_LEARNING_OBJECTIVES"
msgstr "- Du kannst erklären, wie mathematische Modelle in der Biologie angewendet werden können\n"
            "- Du kannst einige Beispiele für biologische mathematische Modelle nennen und erklären, wie sie aufgebaut sind\n"
            "- Du kannst den Lichtschutz in Pflanzen durch nicht-photochemisches Quenching beschreiben\n"
            "- Du kannst zusammenfassen, wie die Fluoreszenz zur Messung der Photosynthese genutzt werden kann\n"
            "- Du kannst Photosynthese-Simulationen erzeugen und deren biologische Bedeutung erklären."

msgid "STR_LINK_PLANTS_AND_PYTHON"
msgstr "Diese Website und alle unsere Modelle sind in der Programmiersprache Python geschrieben. Wenn du dich dafür interessierst, wie du Python selbst benutzen kannst, schau dir [Plants and Python](https://plantsandpython.github.io/PlantsAndPython) an, ein Programmierkurs für Biologen."

# Grammarly checked
#: Start.py:26
msgid "STR_DROP_BOX_INTRO"
msgstr "Wenn du den Unterschied zwischen *in vitro*, *in vivo* und *in silico* nicht kennst, öffne die Dropbox unten."

#: Start.py:27
msgid "STR_EXPANDER_IN"
msgstr "Unterschiede zwischen _in vitro_, _in vivo_ und _in silico_"

#: Start.py:28
msgid "STR_EXPLANATION_IN_VITRO"
msgstr "*In vitro* bezieht sich auf Experimente, die außerhalb eines lebenden Organismus in einer kontrollierten Laborumgebung durchgeführt werden."

#: Start.py:29
msgid "STR_EXPLANATION_IN_VIVO"
msgstr "*In vivo* bezieht sich auf Experimente, die in einem lebenden Organismus, in der Regel einem Tier oder einem Menschen, durchgeführt werden."

#: Start.py:30
msgid "STR_EXPLANATION_IN_SILICO"
msgstr "*In silico* bezieht sich auf Computerexperimente und -simulationen, die mit Hilfe von Computermodellen und -algorithmen durchgeführt werden."

#: Start.py:32
msgid "STR_HEADLINE_PAGES"
msgstr "## Zusammenfassung der Seiten"

# Grammarly checked
#: Start.py:33
msgid "STR_INTRODUCTION_PAGES"
msgstr "Im Folgenden geben wir dir einen kurzen Überblick darüber, was dich auf den folgenden Seiten erwartet."

# Grammarly checked
#: Start.py:34
msgid "STR_PHOTOSYNTHESIS"
msgstr "Auf der Seite **Photosynthese** erfährst du alles, was du über die Photosynthese wissen musst, um die folgenden Seiten vollständig nutzen zu können. In dieser 4Math-Version gibt es ausführlichere Informationen über den Klimawandel sowie eine molekulare Beschreibung des Lichtschutzmechanismus."

# Grammarly checked
#: Start.py:35
msgid "STR_METHOD"
msgstr "Um die photosynthetische Leistung von Pflanzen zu messen, benötigen wir eine spezielle Messmethode. Diese wird auf der Seite **Messmethode** vorgestellt. Darüber hinaus gehen wir darauf ein, wie wir unsere Messungen sichtbar machen können. In dieser 4Math-Version bieten wir zusätzlich Links zu Fachliteratur, in der du mehr über die Fluoreszenzmessungen erfahren kannst."

# Grammarly checked
#: Start.py:36
msgid "STR_MODEL"
msgstr "Wie die Überschrift bereits verrät, arbeiten wir <i>in silico</i>, d.h. mit mathematischen Modellen. Mehr über mathematische Modelle im Allgemeinen und über Fotosynthesemodelle erfährst du auf der Seite <b>Computermodelle</b>."

# Grammarly checked
#: Start.py:37
msgid "STR_EXPERIMENT"
msgstr "Auf der Seite **Experiments *in silico*** lernst du das von uns verwendete und von Anna Matuszyńska ([2016](https://doi.org/10.1016/j.bbabio.2016.09.003)) mitentwickelte Photosynthesemodell kennen. Danach kannst du es direkt selbst verwenden, um deine ersten Messungen durchzuführen."

# Grammarly checked
#: Start.py:38
msgid "STR_MEMORY"
msgstr "Nicht zuletzt lernst du auf der Seite **Plant Light Memory** das pflanzliche Lichtgedächtnis kennen und kannst dessen Existenz selbständig mit Experimenten nachweisen."

#: Lisa's introduction
#: pages/photosynthesis.py:10
msgid "PHO_HEADLINE_PHOTOSYNTHESIS_PAGE"
msgstr "# Fotosynthese"

msgid "PHO_LEARNING_OBJECTIVES"
msgstr "### Lernziele\n"
    "- Du verstehst, warum der Klimawandel Auswirkungen auf Pflanzen und die Photosynthese hat\n"
    "- Du lernst das Grundprinzip der Photosynthese kennen und wo sie stattfindet\n"
    "- Du verstehst warum Pflanzen Problem mit zu viel Licht haben und wie sie sich schützen\n"
    "#### Was du wissen musst:\n"
    "- Aufbau einer Pflanze\n"
    "- Aufbau einer Zelle\n"
    "- Funktion einer Zellmembran"

#: Lisa's introduction
#: pages/photosynthesis.py:12
msgid "PHO_HEADLINE_CLIMATE"
msgstr "## Klimawandel"

#: Lisa's introduction
# Grammarly checked
#: pages/photosynthesis.py:13
msgid "PHO_INTRODUCTION_CLIMATE_CHANGE"
msgstr "Da Pflanzen **nicht** weglaufen können, müssen sie sich an die veränderten Umweltbedingungen anpassen. Pflanzen \
        sind die Grundlage des Lebens auf der Erde (Abb. links), und die Anpassung der Pflanzen ist entscheidend für eine \
        funktionierende Welt. Veränderte Bedingungen, wie z. B. veränderte Temperaturen (Hitze und Kälte), Überschwemmungen \
        und Trockenheit, können bei Pflanzen zu Stress führen. Diese Faktoren können verschiedene kurz- und langfristige \
        Auswirkungen auf Pflanzen haben, die in Abb. rechts zusammengefasst sind. Dennoch empfinden Pflanzen bei plötzlichen \
        Veränderungen Stress, haben aber einen *hochflexiblen Stoffwechsel* zur Anpassung. *Eine der ersten Reaktionen im \
        pflanzlichen Stoffwechsel ist die Photosynthese*, die **Energie** für die Aufrechterhaltung des Pflanzenlebens \
        liefert. Die Photosynthese selbst wird direkt und indirekt von veränderten Umweltbedingungen beeinflusst. Daher \
        ist die analyze der Photosynthese und der CO₂-Fixierung von Pflanzen ein wichtiges Maß für die allgemeine \
        **Pflanzenfitness**, **Produktivität** und das **Überleben**. Folglich ist die Grundlagenforschung zur Photosynthese \
        und ihrer Effizienz unerlässlich, um unsere sich verändernde Welt zu beurteilen."

#: Lisa's introduction
#: pages/photosynthesis.py:16
msgid "PHO_POINT_1"
msgstr ""

#: Lisa's introduction
#: pages/photosynthesis.py:17
msgid "PHO_POINT_2"
msgstr ""

#: Lisa's introduction
#: pages/photosynthesis.py:18
msgid "PHO_POINT_3"
msgstr ""

#: Lisa's introduction
# Grammarly checked
#: pages/photosynthesis.py:19
msgid "PHO_END_OF_INTRODUCTION"
msgstr ""

#: pages/photosynthesis.py:34
msgid "PHO_HEADLINE_PHOTOSYNTHESIS"
msgstr "## Prozess der Photosynthese"

# Grammarly checked
#: pages/photosynthesis.py:35
msgid "PHO_PHOTOSYNTHESIS_EXPLANATION_1"
msgstr "Pflanzen sind autotroph und können daher komplexe organische Verbindungen wie Zucker, Lipide und Proteine aus einfachen Nährstoffen herstellen."

# Grammarly checked
#: pages/photosynthesis.py:36
msgid "PHO_PHOTOSYNTHESIS_EXPLANATION_2"
msgstr "Grundsätzlich ist die Photosynthese ein mehrstufiger Prozess, bei dem die von Photonen übertragene und von Pigmenten absorbierte Energie genutzt wird, um CO₂ in Kohlenhydrate zu binden, die dann in weitere organische Verbindungen umgewandelt werden. Die Netto-Stöchiometrie der Photosynthese ist <span style='color:red'>6&nbsp;CO₂&nbsp;+&nbsp;6&nbsp;H₂O&nbsp;+&nbsp;*Lichtenergie*&nbsp;-&nbsp;>&nbsp;C₆H₁₂O₆&nbsp;+&nbsp;6&nbsp;O₂</span>, wodurch molekularer Sauerstoff entsteht."

#: pages/photosynthesis.py:39
#: pages/photosynthesis.py:41
msgid "PHO_CAPTION_FOTOSYNTHESE_PICTURE"
msgstr "Photosynthese Ablauf"

# Grammarly checked
#: pages/photosynthesis.py:45
msgid "PHO_CAPTION_FOTOSYNTHESE_LEAF_ZOOM"
msgstr "Wenn man in ein Blatt hineinzoomt, sieht man im Querschnitt Mesophyllzellen, in denen sich die Organelle Chloroplasten befinden. Innerhalb des Membransystems der Chloroplasten - dem sogenannten Thylakoidsystem - findet die Lichtreaktion der Photosynthese statt. Die Lichtenergie wird hier in chemische Energie umgewandelt (ATP- und NADPH-Synthese), die für die Fixierung von CO₂ und die Zuckerproduktion verwendet wird."

# Grammarly checked
#: pages/photosynthesis.py:43
msgid "PHO_HEADLINE_PHOTOSYNTHESIS_LOCATION"
msgstr "## Ort der Photosynthese"

# Grammarly checked
#: pages/photosynthesis.py:44
msgid "PHO_PHOTOSYNTHESIS_LOCATION_EXPLANATION"
msgstr "Die Photosynthese findet in den Zellen der vorwiegend grünen Bestandteile der Pflanzen statt, hauptsächlich in den Mesophyllzellen. Die Chloroplasten in diesen Zellen wandeln die Lichtenergie in chemische Energieäquivalente um, was gemeinhin als 'Lichtreaktion' bezeichnet wird. Innerhalb der Reihe von Proteinkomplexen, die für diese Energieumwandlung verwendet werden, gibt es zwei Arten von Photosystemen. Beide enthalten Chlorophyll-Reaktionszentren, die bei Lichtabsorption Verbindungen mit hohem Redoxpotenzial (z. B. H₂O) oxidieren und Akzeptoren mit niedrigem Redoxpotenzial (z. B. NADP⁺) reduzieren können. Das Photosystem II (PSII), das die Energie des Lichts nutzt, um Wasser in Sauerstoff und Protonen zu spalten, ist für uns von besonderem Interesse."

# Grammarly checked
#: pages/photosynthesis.py:48
#: pages/photosynthesis.py:50
msgid "PHO_CAPTION_FOTOSYNTHESE_APPARAT_PICTURE"
msgstr "Komplexe innerhalb der Thylakoidmembran, welche für die Fotosynthese notwendig sind."

# Grammarly checked
#: pages/photosynthesis.py:52
msgid "PHO_PHOTOSYNTHESIS_LOCATION_CONTINUE"
msgstr "Nachdem der Chloroplast das Licht aufgenommen hat, wird die eingefangene Energie im Zytoplasma genutzt, um CO₂ zu binden und das Hauptprodukt, 3-Phosphoglycerat, zu erzeugen, das in andere Kohlenhydrate und Verbindungen umgewandelt wird. Dies ist ein mehrstufiger Prozess, der als Calvin-Zyklus bezeichnet wird, wobei der Komplex Ribulose-1,5-Bisphosphat-Carboxylase-Oxygenase (RuBisCO) den ersten CO₂-Fixierungsschritt katalysiert.\n\n Das folgende Video veranschaulicht die verschiedenen makromolekularen Skalen der Photosynthese auf sehr vereinfachte Weise:"

# Grammarly checked
msgid "PHO_VIDEO_TRANSCRIPT_JOURNEY"
msgstr "Stell dir sich vor, du gehst auf einen Baum zu. Dieser Baum hat viele Teile: Wurzeln, einen Stamm, Äste, Blätter. Alle sind wichtig für die Funktion des Baumes, und es gibt Forscher, die daran interessiert sind, sie zu verstehen.\n\n Konzentrieren wir uns zunächst auf das Blatt, denn dort findet die Photosynthese statt. Geh einen Schritt auf den Baum zu und sieh dir das Blatt an. Es hat eine komplizierte Struktur mit einem Netz von Adern, die sich durch ein Blatt aus grünen, photosynthetischen Zellen ziehen. Und es gibt noch andere Zellen: Pflanzenhaare, gasaustauschende Spaltöffnungen und vieles mehr. Selbst in einem einzigen Blatt gibt es viele verschiedene Funktionsweisen, die alle untersucht werden sollten.Aber konzentrieren wir uns wieder auf die grünen Zellen, das Mesophyll, die Zellen, in denen die meiste Photosynthese stattfindet. Stell dir vor, du gehst einen Schritt weiter und schaust ins Innere der Zelle. Du siehst die Zelle bis zum Rand gefüllt mit verschiedenen Teilen, die ihre eigenen Aufgaben haben: Die Vakuole, die der Zelle ihre Struktur verleiht; der Zellkern, der die genetische Information enthält; der Chloroplast, in dem das Licht eingefangen wird; und viele weitere Organellen. Und lassen Sie uns einen weiteren Schritt in Richtung des Chloroplasten machen, um zu untersuchen, wie das Licht unserer Zelle Energie gibt.\n\n Auf dieser Ebene sieht man, wie das Licht auf die Millionen von Proteinen trifft, die in diesem begrenzten Raum ihre Arbeit verrichten. Spezielle unter ihnen, die Photosysteme, können das Licht aufnehmen, mit Elektronen jonglieren und sie weitergeben. Eine ganze Miniaturmaschinerie wird von ihnen angetrieben, die für die Produktion und den Verbrauch von Dingen sorgt. Viele von ihnen verlassen oder betreten die Chloroplasten aus anderen Teilen der Zelle. Alles verändert sich ständig! Und da drinnen sitzen wir und fragen uns: Wie funktioniert die Photosynthese?"

#: pages/photosynthesis.py:57
msgid "PHO_HEADLINE_NPQ"
msgstr "## Wie geht man mit zu viel Licht um?"

# Grammarly checked
#: pages/photosynthesis.py:58
msgid "PHO_NPQ_EXPLANATION"
msgstr "Was passiert, wenn zu viel Licht und damit zu viel Energie auf das Photosystem II trifft? Bricht es zusammen und muss dann von der Zelle erneuert werden? Zum Glück nicht! Stattdessen kann die überschüssige Energie als Wärme freigesetzt oder für die ATP-Synthese verwendet werden. Auf diese Weise kann die Zelle geschützt werden. Die beiden nicht-photochemischen Schutzmechanismen werden als NPQ bezeichnet."

msgid "PHO_NPQ_EXPLANATION_DETAILED"
msgstr "**Nicht-photochemisches Quenching (NPQ)** ist ein Schutzmechanismus, den photosynthetische Organismen anwenden, um eine Schädigung ihrer Photosysteme durch einen Überschuss an Lichtenergie zu vermeiden. NPQ umfasst sowohl schnelle als auch langsame Mechanismen, die reversibel sind und zu einer Verringerung der Effizienz des photosynthetischen Prozesses unter Bedingungen von Lichtüberschuss führen. Diese Verringerung der Effizienz wird dadurch erreicht, dass die überschüssige Lichtenergie als Wärme abgeleitet wird, anstatt sie für die Photosynthese zu nutzen. Obwohl NPQ die Umwandlungsrate reduziert, wirkt es daher als Sicherheitsventil, das den Photosyntheseapparat vor möglichen Schäden schützt."

msgid "PHO_NPQ_EXPLANATION_CONTINUED"
msgstr "Unten sieht man ein besonderes Beispiel für NPQ, den 'Xantophyll-Zyklus'. Das Modell, das wir auf den folgenden Seiten verwenden, untersucht, wie dieser Zyklus als Teil der Lichtanpassung der Pflanzen abläuft."

msgid "PHO_CAPTION_NPQ"
msgstr "Der an NPQ beteiligte 'Xanthophyll-Zyklus'. In einer Reihe von zwei reversiblen Schritten wird das Carotinoid Violaxanthin in die NPQ-aktive Form Zeaxanthin umgewandelt. Zeaxanthin kann Lichtenergie absorbieren und Wärme abgeben und schützt so den Photosyntheseapparat. Die Umwandlungsschritte werden durch den pH-Wert reguliert, der stark auf die Lichtintensität reagiert."

#: pages/photosynthesis.py:60
msgid "PHO_HEADER_MODEL_ORGANISMEN"
msgstr "## Eine Pflanze für alle Fälle"

# Grammarly checked
#: pages/photosynthesis.py:61
msgid "PHO_MODEL_ORGANISMEN_EXPLANATION"
msgstr "Die vorgestellten Methoden und Modelle lassen sich zwar auf viele Pflanzen anwenden, die meisten wurden jedoch für die Modellpflanze *Arabidopsis thaliana* entwickelt."

# Grammarly checked
#: pages/photosynthesis.py:63
msgid "PHO_EXPANDER_MODEL_ORGANISMEN"
msgstr "Wieso wird Arabidopsis thaliana als Modellorganismus bezeichnet?"

# Grammarly checked
#: pages/photosynthesis.py:69
msgid "PHO_CAPTION_THAIANA_PICTURE"
msgstr "Das Foto einer Pflanze des Wildtyps des Modellorganismus _Arabidopsis thaliana_."

# Grammarly checked
#: pages/photosynthesis.py:70
msgid "PHO_EXPANDER_MODEL_ORGANISM_EXPLANATION"
msgstr "<em>Arabidopsis</em> (<em>Arabidopsis thaliana</em>) wird als Modellorganismus bezeichnet, da sie häufig als Modellsystem in der Pflanzenbiologie verwendet wird. Sie hat mehrere Eigenschaften, die sie für Laborstudien gut geeignet machen, darunter: \n"
"1. klein und schneller Lebenszyklus: <em>Arabidopsis</em> hat einen kurzen Lebenszyklus, der es Forschern ermöglicht, mehrere Generationen in einem relativ kurzen Zeitraum zu untersuchen. \n"
"2. einfache Anatomie: Die Struktur der Pflanze ist einfach und gut verstanden, was es den Forschern erleichtert, spezifische Entwicklungsprozesse zu untersuchen.\n"
"3. Genom-Sequenzierung: Das vollständige Genom von <em>Arabidopsis</em> war das erste Pflanzengenom, das sequenziert wurde, was den Forschern eine Fülle von genetischen Informationen über die Pflanze geliefert hat. \n"
"4. genetische und molekulare Hilfsmittel: Für <em>Arabidopsis</em> steht eine große Sammlung von genetischen und molekularen Werkzeugen zur Verfügung, die es den Forschern ermöglichen, die Entwicklung, das Wachstum und die Stressreaktionen der Pflanze auf zellulärer und molekularer Ebene zu untersuchen. \n"
" All diese Faktoren haben <em>Arabidopsis</em> zu einem wichtigen Modellorganismus für die Untersuchung der grundlegenden Pflanzenbiologie gemacht, und ihre Erkenntnisse haben zu unserem Verständnis der Biologie aller Pflanzen beigetragen."



#: pages/method.py:70
msgid "MTH_LITERATURE_DECLARATION"
msgstr "Folgende Literatur vertieft das Thema PAM-Messungen, oder bietet die Möglichkeit sich mit den Grundlagen vertraut zu machen."

#: pages/method.py:10
msgid "MTH_HEADLINE_ONE"
msgstr "# Die Messmethode"

msgid "MTH_LEARNING_OBJECTIVES"
msgstr "### Lernziele\n"
    "- Du verstehst, warum Pflanzen leuchten (fluoreszieren)\n"
    "- Du lernst etwas über PAM-Messungen (Pulse Amplitude Modulation)\n"
    "- Du kannst die Ergebnisse einer PAM-Messung interpretieren\n"
    "#### Was man wissen muss:\n"
    "- Farbspektrum des Lichts\n"
    "- Grundlegendes Konzept der Energieumwandlung und -erhaltung"

# Grammarly checked
#: pages/method.py:15
msgid "MTH_INTRODUCTION_MEASUREMENT"
msgstr "Auf der vorherigen Seite hast du erfahren, wie wichtig die Photosynthese ist und wie sie funktioniert. Aber wie können wir wissen, wie **photosynthetisch aktiv** ein Organismus ist? Auf dieser Seite lernst du, wie wir die Dynamik der Photosynthese in Echtzeit mit Lichtmessgeräten (genauer gesagt Fluoreszenzmessgeräten) messen können. Da die Biologie immer mehr zu einer quantitativen Wissenschaft wird, gibt es zahlreiche Methoden zur Untersuchung der Photosynthese. Da Pflanzen zum Beispiel Sauerstoff produzieren und Kohlendioxid aufnehmen, kann die Photosynthese daran gemessen werden, wie schnell diese Gase produziert oder verbraucht werden. Die Messung von Gasen kann jedoch schwierig sein, vor allem, wenn man sie draußen an einem Baum oder auf einem Feld durchführen möchte. Daher ist ein wesentliches Merkmal photosynthetischer Organismen von entscheidender Bedeutung für die Bereitstellung alternativer Methoden zur Messung der Photosynthese *in vivo*!"


# Grammarly checked
#: pages/method.py:18
msgid "MTH_CAPTION_ABB1"
msgstr "Foto einer Pflanze der Art *Spathiphyllum*, in drei verschiedenen Beleuchtungssituationen: Links in Tageslicht, \
        in der Mitte beleuchtet von einer handelsüblichen UV5-Lampe, Rechts ebenfalls beleuchtet mit einer UV5-Lampe, \
        jedoch durch einen Filter, welcher alle Wellenlängen, bis auf die des roten Lichtes filtert."

#: Explanation by Tobias
#: pages/method.py:20
msgid "MTH_GROWING_PLANTS_1"
msgstr "Leuchtende Pflanzen?"

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:21
msgid "MTH_INTRODUCTION_GLOWING"
msgstr "Fluoreszenzmessungen bei Pflanzen beruhen auf den Eigenschaften des angeregten Chlorophylls. Während ein erheblicher Teil der Lichtenergie für die Photochemie verwendet wird, können die Anregungen auch als Wärme oder Fluoreszenz im roten Wellenlängenbereich abgeleitet werden."

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:22
msgid "MTH_PLANT_ARE_SHINING_RED"
msgstr "Sie werden vielleicht denken: 'Aber Pflanzen sind doch grün, und ich habe noch nie eine fluoreszierende Pflanze gesehen!'. Und das ist natürlich richtig. Pflanzen absorbieren kein grünes Licht, sondern reflektieren es, was wir als ihre Grundfarbe sehen. Ihr rotes Leuchten ist jedoch viel schwächer, und da aus allen Richtungen stärkeres Licht in unsere Augen fällt, können wir es nicht sehen."

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:23
msgid "MTH_INTRODUCTION_EXPERIMENT"
msgstr "Deshalb haben wir ein kleines Experiment für euch vorbereitet: Hier haben wir einen kleinen Teil des Blattes einer Pflanze mit einem Aufkleber mit den RWTH-Buchstaben beklebt und werden ihn nun mit intensivem Licht bestrahlen. Der Rotfilter der Kamera hilft uns, störendes Licht auszublenden und uns auf die rote Fluoreszenz zu konzentrieren. Beobachte nun, was passiert:"

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:29
msgid "MTH_EXPLANATION_VIDEO"
msgstr "Hast du das rote Leuchten und den geisterhaften Abdruck des Aufklebers auf dem Blatt gesehen? Du hast gerade die Anpassung der Pflanze in Aktion gesehen. Da sich die Pflanze nicht bewegen kann, muss sie sich an ihre Umgebung anpassen. Auf die Teile des Blattes, die nicht von dem Aufkleber bedeckt sind, fällt sehr viel Licht. Da dieses Licht schädlich sein könnte, produzierte die Pflanze schnell einige Chemikalien, die als 'Sonnenschutz' in den Zellen wirken. Nach ein paar Sekunden waren diese Zellen geschützt und empfingen weniger Licht und fluoreszierten weniger. Doch als wir den Aufkleber abnahmen, hatten die Zellen darunter keinen Sonnenschutz produziert. Sie sahen das intensive Licht und fluoreszierten mit voller Kraft - direkt neben ihren geschützten Nachbarn. Diesen deutlichen Unterschied in der Fluoreszenz sah man als Nachbild des Aufklebers. Und als wir die Lampe weiter bestrahlten, passten sich alle Zellen dem Licht an und das Bild auf dem Blatt verschwand."

#: Explanation by Tobias
#: pages/method.py:31
msgid "MTH_MEASURING_FLUORESZENZ"
msgstr "Messung der Fotosynthese mit Fluoreszenz"

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:32
msgid "MTH_EXPLANATION_MEASUREMENT_1"
msgstr "Dieses Experiment hat dir gezeigt, wie Pflanzen leuchten und wie erstaunlich sie sich an das Licht anpassen \
        können. Aber wie kann das beim Testen der Fotosynthese helfen? Sehr viel sogar. Denn nicht nur der 'Sonnenschutz' \
        beeinflusst die Blattfluoreszenz, sondern auch viele andere Faktoren. Wenn du dich dafür interessierst, wie das \
        geschieht, schaue dir den Abschnitt <a href='#' id='4Bio'>4Bio</a> an. Nehmen wir einmal an, die Stärke der Fotosynthese der \
        Pflanze wirkt sich auch auf die Leuchtkraft aus."

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:33
msgid "MTH_INTRODUCTION_PHI"
msgstr "Deshalb haben Wissenschaftler \
        eine Methode erfunden, um diese Fluoreszenz zu messen und zu verfolgen, wie sie sich im Laufe der Zeit verändert \
        (Du wirst später von dieser 'PAM' hören). Mit ein paar cleveren mathematischen Tricks kannst du dann viele \
        Dinge berechnen, die uns interessieren könnten: Wie gesund das Blatt ist, wie sehr es sich vor dem Licht schützt \
        und vor allem, wie es Fotosynthese betreibt. Wir nennen diesen letzten Messwert 'ΦPSII', mit dem griechischen \
        Buchstaben 'Psi', und du wirst ihn vielleicht in einigen der Diagramme sehen, die du später erstellen wirst. \
        Je höher dieser Wert ist, desto besser, da die Pflanze dann effizienter Fotosynthese betreibt."

msgid "MTH_VIDEO_TRANSCRIPT_PAM"
msgstr "Hast du dich jemals gefragt, wie Wissenschaftler die photosynthetische Aktivität von Pflanzen messen? Eine Möglichkeit ist eine PAM-Messung. PAM steht für Pulse Amplitude Modulation und misst die Fluoreszenz von Chlorophyllmolekülen in einem Blatt. Wir werden dieses PAM-Fluorometer verwenden, um die Fluoreszenz des Chlorophylls in einer Pflanze zu messen. Zunächst müssen wir sicherstellen, dass die Pflanze mindestens 12 Stunden lang an die Dunkelheit angepasst ist. Dann klemmen wir diese Sonde auf das Blatt und blitzen es mit einem kurzen Lichtimpuls. Die Chlorophyllmoleküle absorbieren das Licht und geben einen Fluoreszenzstoß ab, den wir mit dem Detektor messen können.\n\n Nun beginnen wir mit der Messung, die uns ein Diagramm der von den Chlorophyllmolekülen abgegebenen Fluoreszenz über die Zeit liefert. Dieses Diagramm kann uns Aufschluss über den photosynthetischen Stress der Pflanze geben. Das Diagramm enthält mehrere Parameter, darunter F₀, das anfängliche Fluoreszenzniveau vor dem Lichtimpuls, und Fₘ, das maximale Fluoreszenzniveau. Das Verhältnis von Fᵥ zu Fₘ gibt die maximale Quantum-Effizienz des zweiten Photosystems an, was ein Indikator für den allgemeinen Gesundheitszustand der Pflanze ist. Durch PAM-Messungen können Wissenschaftler Einblicke in die photosynthetische Gesundheit von Pflanzen gewinnen, was bei der Pflanzenbewirtschaftung und der Erforschung des Klimawandels hilfreich sein kann."

#: Explanation by Tobias

#: pages/method.py:40
msgid "MTH_MEASURING_LIGHT_FLUORESCENCE"
msgstr "Grundprinzipien der Messung der Chlorophyllfluoreszenz mit PAM"

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:41
msgid "MTH_EXPLANATION_INTRODUCTION_ATTEMPTS"
msgstr "In dieser einen Abbildung werden die Grundprinzipien des Fluoreszenz- und des PAM-Experiments erläutert. Im unteren Feld findest du die Ergebnisse der PAM-Experimente. Sieh es dir gut an, denn in wenigen Minuten wirst du ähnliche Ergebnisse erzielen, nicht mit Hilfe eines Fluorometers, sondern mit deinem Computer! Was sehen wir also in diesem Diagramm? Es ist das Ergebnis eines einzigartigen Beleuchtungsprotokolls, bei dem eine dunkeladaptierte Pflanze sehr schwachem aktinischen Licht (AL, weißer Bereich im Lichtbalken, L) ausgesetzt wird, gefolgt von einer dunklen Erholungsphase, in der das Licht vollständig abgeschaltet wird (schwarzer Bereich in L). Mehrere sättigende Lichtblitze (Sättigungspulse, SP) werden vor, während und nach der aktinischen Beleuchtung eingesetzt, um die maximale Fluoreszenz Fₘ, Fₘ' bzw. Fₘ'' zu messen. Anhand dieser Fluoreszenzmerkmale können wir die Werte für die Quantifizierung der Photosynthese berechnen, z. B. die Menge an NPQ.\n\n"
                "Warum sehen wir dann überhaupt einen Effekt? Dies wird durch das Schema oben links erklärt. Die Absorption von Lichtenergie bringt Chlorophyllmoleküle in den ersten angeregten Zustand (S1 im linken Diagramm, einem vereinfachten 'Jablonsky-Diagramm'). Damit die Chlorophylle in den Grundzustand (S₀) zurückkehren, kann die absorbierte Energie für die Ladungstrennung und die Photosynthese verwendet werden (photochemisches Quenching, qP), als Wärme abgeleitet werden (nicht-photochemisches Quenching, NPQ) oder als Fluoreszenz wieder emittiert werden. Und nun der entscheidende Teil: Die Emissionsspektren der Fluoreszenz sind gegenüber den Absorptionsspektren rotverschoben. Das bedeutet, dass das Fluoreszenzlicht röter ist (bei höheren Wellenlängen auf der linken Achse) als das absorbierte Licht (oberes Feld auf der rechten Seite). Das wiederum bedeutet, dass die Fluoreszenz mit Fluorometern mit entsprechenden optischen Filtern nachgewiesen werden kann und ihr Signal nicht mit dem Licht, das wir auf die Pflanzen strahlen, verwechselt wird. Das emittierte Fluoreszenzsignal wird mit Tastenanzeigen aufgezeichnet, wie in der unteren Abbildung zu sehen ist. Es hat uns viel Zeit gekostet, alles in einer einzigen Abbildung zusammenzufassen, und diese Abbildung stammt aus unserer früheren Arbeit (Nies et al. 2021)."

# Grammarly checked
#: pages/method.py:44
#: pages/method.py:58
#: pages/method.py:63
msgid "MTH_CAPTION_ABB2"
msgstr "Oben: Schematische Darstellung der Hauptprinzipien der Chlorophyll-a-Fluoreszenz und des PAM-Experiments. Unten: Beispielgrafik einer PAM-Messung"

# Grammarly checked
#: pages/method.py:37
msgid "MTH_HEADLINE_PAM_MEASUREMENT"
msgstr "### PAM Experimente"

# Grammarly checked
#: pages/method.py:38
msgid "MTH_INTRODUCTION_PAM_MEASUREMENT"
msgstr "Hier wollen wir dir von einem spannenden Experiment erzählen, mit dem Forscher die Photosynthese messen. Die Grundlage dafür ist die Fluoreszenz, von der du schon gehört hast. Dieses Experiment heißt 'Puls-Amplituden-Modulation', kurz 'PAM'. Aus dem Namen können Sie ableiten, dass wir als Experimentatoren die 'Amplitude' (Intensität) der Lichtblitze 'modulieren' (steuern)."

#: Explanation by Tobias
#: pages/method.py:48
msgid "MTH_SATURATING_PULSES"
msgstr "Sättigungsimpulse"

#: Explanation by Tobias
# Grammarly checked
#: pages/method.py:49
msgid "MTH_EXPLANATION_ATTEMPTS"
msgstr "Du musst noch einen weiteren Aspekt von PAM kennen: die Sättigungsimpulse. Unser Gerät gibt der Pflanze alle \
        paar Sekunden einen sehr intensiven Lichtimpuls, wodurch ihre Fotosynthesemaschinerie überlastet wird. In diesem \
        Zustand wird das Messlicht vollständig in Fluoreszenz umgewandelt, und wir messen die maximale Fluoreszenzausbeute \
        'Fₘ'. Während die normale Fluoreszenzausbeute von der Fotosynthese der Pflanze abhängt, ist dies bei Fₘ nicht der \
        Fall. Durch den Vergleich von normaler und maximaler Ausbeute können wir also Veränderungen innerhalb und außerhalb \
        der Fotosynthese unterscheiden, zum Beispiel den Lichtschutz der Pflanze. Wenn man dann noch Protokolle mit \
        verschiedenfarbigem Licht anwendet, kann man die bereits erwähnten ΦPSII-, NPQ- und viele andere Werte berechnen. \
        Aber wie das gemacht wird, geht viel zu weit. Am wichtigsten ist, dass du verstehst, dass wir vergleichen, welcher \
        Anteil des Lichts gerade in Fluoreszenz umgewandelt wird, wie viel maximal, und wie sich diese Messungen über die \
        Zeit und die Bedingungen verändern."

#: pages/method.py:51
msgid "MTH_HEADLINE_ILLUSTRATION"
msgstr "## Die Abbildungen"

# Grammarly checked
#: pages/method.py:52
msgid "MTH_EXPLANATION_ILLUSTRATION_UNITS"
msgstr "Das Fluoreszenzsignal (y-Achse) wird gegen die Zeit (x-Achse) aufgetragen. Die sichtbaren Spitzen sind die als Reaktion auf den sättigenden Lichtimpuls emittierte Fluoreszenz. Jeder Peak wird als Fₘ' bezeichnet, wobei der erste im Dunkeln als Fₘ gemessen wird."

# Grammarly checked
#: pages/method.py:53
msgid "MTH_EXPLANATION_ILLUSTRATION"
msgstr "Das war viel Theorie für ein bisschen Glanz, also probiere selbst eine Messung auf der Seite **Experiments *in silico*** aus!"



#: pages/model_explain.py:19
msgid "MDL_HEADLINE_COMPUTATIONAL_MODELS"
msgstr "# Computergestützte Modelle"

msgid "MDL_LEARNING_OBJECTIVES"
msgstr "### Lernziele\n"
"- Du verstehst die Grundlagen der mathematischen Modellierungstheorie\n"
"- Du lernst die Anwendung von Modellen in der Biologie anhand gängiger Beispiele kennen\n"
"- Du wirst mit der Implementierung eines mathematischen Modells in der Programmiersprache Python vertraut\n"
"#### Was du wissen musst:\n"
"- Grundlagen der Programmierung\n"
"- Grundlagen der Modellierung"

# Grammarly checked
#: pages/model_explain.py:21
msgid "MDL_HEADLINE_MODEL"
msgstr "## Was sind mathematische Modelle?"

# Grammarly checked
#: pages/model_explain.py:23
msgid "MDL_MATHEMATICAL_MODELLING_EXPLANATION_1"
msgstr "Bei der mathematischen Modellierung geht es um die Erstellung mathematischer Modelle zur Verwendung in verschiedenen Bereichen der Forschung und Industrie. Sie ist von Vorteil, wenn traditionelle Testmethoden zu teuer und zeitaufwendig sind. Die Sprache der **Mathematik** ermöglicht es uns, reale Prozesse, Situationen und Probleme mit Hilfe von Gleichungen in allgemeine Aussagen zu übersetzen. Diese Übersetzung ist jedoch nicht eins-zu-eins und erzwingt ein gewisses Maß an **Vereinfachung**. Daher sind Modelle nie eine genaue Beschreibung, die alle Details umfassen, sondern eine Vereinfachung, die mit starren Methoden für eine bestimmte Untersuchung erstellt wird. Das mit mathematischen Begriffen beschriebene Problem wird dann mit mathematischen Techniken gelöst, die heute durch **Rechenprogramme** enorm unterstützt werden. Die resultierende Lösung wird dann auf das reale Problem angewandt und bewertet. Wenn zusätzliche Lösungen erforderlich sind, muss das mathematische Modell überarbeitet werden. Auf diese Weise ist der Modellentwicklungsprozess oft nicht linear, sondern ein iterativer Zyklus, wie in der Abbildung unten dargestellt."

#: pages/model_explain.py:26
msgid "MDL_CAPTION_MODELLING_PICTURE"
msgstr "Der Zyklus der Modellierung. Der Entwickler muss oft mehrere Iterationen durchlaufen, um von einem anfänglichen Problem zu einem kuratierten mathematischen Modell zu gelangen."


#: pages/model_explain.py:29
msgid "MDL_MATHEMATICAL_MODELLING_EXPLANATION_1b"
msgstr "Im folgenden Video erfährst du mehr über die Erstellung und Verwendung mathematischer Modelle in der Biologie."

msgid "MDL_VIDEO_TRANSCRIPT_MODELS"
msgstr "Das bedeutet, dass man verstehen muss, was im Inneren des Systems vor sich geht, einige Teile vereinfachen und andere ignorieren muss. Das Ergebnis ist ein Konzept dafür, wie das System im Kern funktioniert. Als Nächstes hilft uns die mathematische Sprache dabei, dieses Konzept in eine greifbare, erforschbare Sache zu verwandeln. Wir verwandeln die Proteine, Moleküle, Reaktionen und alles andere in Zahlen und Gleichungen. Je nachdem, woran man interessiert ist, gibt es viele Möglichkeiten, dies zu tun, und oft muss man eine Menge Zeit und Daten in sein Modell stecken, damit es funktioniert. Aber diese Arbeit zahlt sich aus, denn jetzt muss man nicht mehr darüber nachdenken, was passiert, sondern man kann es berechnen und simulieren. Und das ist der Teil, der die Modellierung so besonders macht: Was du simulierst, bleibt dir überlassen. Man kann am Modell ändern, was man will, und herausfinden, was das bewirkt. Probiere zum Beispiel ein neues Protein und eine neue Reaktion an der Zelle aus; verändere das Licht und die Umgebung und sieh, wie sich deine Zelle dort verhält; und wenn du Daten gemessen hast, sieh nach, ob sich dein Modell genauso verhält. Du könntest sogar versuchen, herauszufinden, was die Zelle daran hindert, viel Zucker zu produzieren! Es gibt so viele Möglichkeiten. Wenn du es programmieren kannst, kannst du es auch ausprobieren. Denn heute wird diese Forschung digital durchgeführt. Du kannst das ganze Modell programmieren und den Computer die Fragen beantworten lassen, die du stellst."

#: pages/model_explain.py:34
msgid "MDL_EXAMPLE_MATHEMATICAL_MODEL"
msgstr "### Ein Beispiel für ein mathematisches Modell"

#: pages/model_explain.py:210
#: pages/model_explain.py:37
msgid "MDL_TAB_SIR"
msgstr "Das SIR-Modell"

#: pages/model_explain.py:210
msgid "MDL_TAB_MANUAL"
msgstr "Manuelle Implementierung"

#: pages/model_explain.py:210
msgid "MDL_TAB_MODELBASE"
msgstr "Implementierung von Modelbase"

#: pages/model_explain.py:213
#: pages/model_explain.py:40
msgid "MDL_HEADLINE_SIR"
msgstr "#### Das SIR-Modell"

#: pages/model_explain.py:286
msgid "MDL_HEADLINE_MANUAL"
msgstr "#### Manuelle Implementierung"

#: pages/model_explain.py:312
msgid "MDL_HEADLINE_MODELBASE"
msgstr "#### Modelbase-Implementierung [1]"

# Grammarly checked
#: pages/model_explain.py:215
#: pages/model_explain.py:42
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE"
msgstr "Nehmen wir ein Szenario an, in dem eine neue, hoch ansteckende, aber im Großen und Ganzen harmlose Krankheit in eine Population von Außerirdischen auf Planet-X eingeschleppt wird. Diese Krankheit hat die Menschen auf Planet-X so überrascht, dass sie ihre Bevölkerung in drei Kategorien unterteilt haben: diejenigen, die für die Krankheit anfällig sind und jederzeit erkranken können (S), diejenigen, die sich von der Infektion erholt haben (R), und die aktuell Infizierten (I). Um den Übergang zwischen den einzelnen Kategorien zu modellieren, bestimmen wir die Infektionsrate (v<sub>1</sub>) in Abhängigkeit von der Anzahl der S und I in der Gesamtbevölkerung (N) und ihre Genesungsrate (v<sub>2</sub>) ausschließlich in Abhängigkeit von den I. Sie entdeckten auch, dass die R vollständige Immunität erlangen, aber die Menschen sind zu gestresst, um ihre Bevölkerung zu vergrößern. Um zu wissen, wie ihre Bevölkerung in ein paar Monaten aussehen wird, probieren sie eine neue Methode aus, von der sie auf der Erde gehört haben, nämlich **mathematische Modellierung**. Zu Beginn sollten Sie ein Schema für Ihr Problem erstellen; in diesem Fall werden die S zu I mit einer Rate von v<sub>1</sub> und die I zu R mit einer Rate von v<sub>2</sub>. Die Rate v<sub>1</sub> ist abhängig von der Infektionsrate der Krankheit (β), der Anzahl der S und I im Verhältnis zu den N. Andererseits ist die Rate v<sub>2</sub> nur abhängig von der Anzahl der I und ihrer Erholungsrate (γ)."

# Grammarly checked
#: pages/model_explain.py:219
#: pages/model_explain.py:46
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_1"
msgstr "Mit diesem Schema hast du dein Problem bereits erfolgreich modelliert; jetzt musst du es nur noch anwenden können. Dazu muss man sich überlegen, welche Informationen man aus dem Modell gewinnen will, in diesem Fall die Veränderung der Population in Abhängigkeit von der Zeit. Ein praktisches mathematisches Hilfsmittel, um die Veränderung eines Wertes in Abhängigkeit von der Veränderung eines anderen Wertes darzustellen, ist die so genannte gewöhnliche Differentialgleichung (ODE). Mit Hilfe von Differentialgleichungen kann man die Beziehung zwischen der Zeit und der Veränderung der Anzahl der Personen in jeder Kategorie beschreiben, so dass es insgesamt drei Gleichungen gibt. Dieser Satz von drei Gleichungen wird als System von ODEs bezeichnet und mit Hilfe eines Integrators numerisch gelöst. Wenden wir also diese Methode auf unser Beispiel von Planet-X an, indem wir zunächst das ODE-System erstellen:"


# Grammarly checked
#: pages/model_explain.py:236
#: pages/model_explain.py:50
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_2"
msgstr "Um jede ODE effektiv zu lösen, ist es entscheidend, die beteiligten Raten zu berücksichtigen. Mit einem vorgegebenen Schema kann man bestimmen, welche Rate dem Entfernen oder Hinzufügen bestimmter Verbindungen entspricht. Mit Hilfe der Integration kann man die Menge jeder Verbindung zu einem bestimmten Zeitpunkt berechnen und die Veränderung im Laufe der Zeit darstellen, wenn man dies für mehrere Zeitpunkte tut. Wenden wir diese Methode nun auf die Krankheit auf Planet-X an. Nach Angaben der Wissenschaftler beträgt die Infektionsrate (β&nbsp;=&nbsp;2) und die Erholungsrate (γ&nbsp;=&nbsp;0,2). Mit diesen Werten und Ausgangspopulationen von (S&nbsp;=&nbsp;900), (I&nbsp;=&nbsp;100), (R&nbsp;=&nbsp;0) und (N&nbsp;=&nbsp;S&nbsp;+&nbsp;I&nbsp;+&nbsp;R&nbsp;=&nbsp;1000) können wir unser ODE-System lösen. Das sich daraus ergebende Diagramm zeigt, dass die Krankheit auf Planet-X schließlich von selbst ausgerottet wird. Hier haben wir Ihnen auch die Möglichkeit gegeben, eine interaktive Version des Modells zu verwenden."

# Grammarly checked
#: pages/model_explain.py:251
#: pages/model_explain.py:61
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_3"
msgstr ""

#: pages/model_explain.py:73
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_4"
msgstr ""

#: pages/model_explain.py:155
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_SUSCEPTIBLE"
msgstr "Anfällig"

#: pages/model_explain.py:173
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_INFECTED"
msgstr "Infiziert"

#: pages/model_explain.py:191
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_RECOVERED"
msgstr "Genesen"

#: pages/model_explain.py:123
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_SIR_TIMESLIDER"
msgstr "Simulationszeit in Monaten"

#: pages/model_explain.py:132
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_SIR_BETASLIDER"
msgstr "Infektionsrate β"

#: pages/model_explain.py:141
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_SIR_GAMMASLIDER"
msgstr "Erholungsrate γ"

# Grammarly checked
#: pages/model_explain.py:254
msgid "MDL_CAPTION_SIR_RESULTS_PICTURE"
msgstr "Die Veränderung der Bevölkerung von Planet-X unter Verwendung des von den Wissenschaftlern der Erde übernommenen SIR-Modells ist dargestellt. Die Infektionsrate wird auf (β&nbsp;=&nbsp;2) und die Erholungsrate auf (γ&nbsp;=&nbsp;0,2) gesetzt. Die Ausgangspopulationen sind: (S&nbsp;=&nbsp;900), (I&nbsp;=&nbsp;100), (R&nbsp;=&nbsp;0), und (N&nbsp;=&nbsp;S&nbsp;+&nbsp;I&nbsp;+&nbsp;R&nbsp;=&nbsp;1000)"

#: pages/model_explain.py:352
msgid "MDL_HEADLINE_MODEL_PHOTOSYNTHESIS"
msgstr "## Modelle der Photosynthese"

#: pages/model_explain.py:357
msgid "MDL_MODELS_OVERVIEW"
msgstr "Bei der Modellierung sollte der erste Schritt immer die Suche nach dem Problem sein, denn vielleicht findest du deine Antworten bereits in der weiten Welt der Forschung. Manchmal findet man ein Modell, das die eigenen Bedürfnisse vollständig abdeckt oder zumindest eines, auf dem man aufbauen kann. Der Austausch von Forschungsergebnissen ist die Grundlage jeder Wissenschaft, und das ist bei der Computermodellierung nicht anders. In diesem Abschnitt werden wir drei andere Modelle der Photosynthese kurz zusammenfassen, bevor du mit unserem eigenen Modell spielen kannst. Obwohl es sich bei allen um mechanistische Modelle handelt, haben sie unterschiedliche Ansätze und Ziele. Sie unterscheiden sich in ihrer Komplexität, Popularität und Methode, versuchen aber alle, dasselbe zu simulieren: Die Kohlenstoffassimilation (A) der Photosynthese."

#: pages/model_explain.py:357
msgid "MDL_HEADLINE_FVCB"
msgstr "### Das Modell von Farquhar, von Caemmerer und Berry"

# Grammarly checked
#: pages/model_explain.py:359
msgid "MDL_FVCB_1"
msgstr "Das FvCB-Modell, das auch als Farquhar-, von Caemmerer- und Berry-Modell bekannt ist, ist ein weit verbreitetes theoretisches Rahmenwerk in der Pflanzenbiologie, das erstmals 1980 konzipiert wurde[2]. Während die Photosynthese im Großen und Ganzen in drei Phasen zusammengefasst werden kann: Lichtabsorption, Lichtreaktionen und Kohlenstofffixierung, konzentriert sich dieses Modell nur auf die letztere. Es bietet einen vereinfachten Überblick über die C<sub>3</sub> Photosynthese und ist nach seinen Hauptverfassern benannt: Graham D. Farquhar, Susanne von Caemmerer und Joseph A. Berry. Wenn Sie mit der C<sub>3</sub> Photosynthese nicht vertraut sind, sollten Sie sich die Dropbox unten ansehen, um mehr über die verschiedenen Arten der Photosynthese zu erfahren."

#: pages/model_explain.py:318
msgid "MDL_FVCB_2"
msgstr "Das Hauptziel des FvCB-Modells ist die Beschreibung der Kohlenstoffassimilation (A), d. h. des Prozesses, bei dem Pflanzen und andere photosynthetische Organismen Kohlendioxid aus der Atmosphäre in organische Verbindungen umwandeln. Dieses Ziel findet sich in vielen Photosynthesemodellen, da es ein entscheidender Faktor für das Wohlergehen der Pflanze ist, denn je höher A ist, desto gesünder ist die Pflanze. Wie alles in der Biologie ist es komplexer, aber in einem vereinfachten Sinn ist dies eine gängige Sichtweise. Das FvCB-Modell verwendet rein mathematische Gleichungen zur Berechnung von A. Außerdem wird es als das Minimum von drei verschiedenen begrenzten As beschrieben: der begrenzten RuBisCO-Rate (A<sub>c</sub>), der begrenzten Elektronentransportrate (A<sub>j</sub>) und der begrenzten Triphosphatrate (A<sub>p</sub>). Mithilfe dieses Modells lässt sich A anhand einer Reihe von vordefinierten und größtenteils messbaren Parametern und Gleichungen leicht berechnen, wie unten dargestellt:"

#: pages/model_explain.py:320
msgid "MDL_FVCB_3"
msgstr "Das Modell verwendet den CO<sub>2</sub>-Partialdruck des Chloroplasten (C<sub>c</sub>), den O<sub>2</sub>-Partialdruck des Chloroplasten (O), den C<sub>c</sub>-Wert mit A = −R<sub>d</sub> (Γ<sub>&midast;</sub>), die maximale Carboxylierungsrate (V<sub>cmax</sub>), die Michaelis-Menten-Konstanten der Carboxylierung und der Oxygenierung (K<sub>c</sub> bzw. K<sub>o</sub>), die potenzielle Elektronentransportrate (J) und die Rate der Versorgung des Chloroplasten mit anorganischem Phosphat (T<sub>p</sub>) zur Berechnung der drei Raten. Die Tagesatmung (R<sub>d</sub>) wird subtrahiert, um die jeweiligen Assimilationsraten darzustellen. Es ist zu beachten, dass dieses Modell auf ein C<sub>c</sub> beschränkt ist, das größer als Γ<sub>&midast;</sub>. ist."

msgid "MDL_FVCB_4"
msgstr "Die Berechnung von A mit diesen Gleichungen ist relativ einfach, aber das Modell hat einen entscheidenden Nachteil. Es bezieht die Zeit nicht mit ein und beschränkt sich auf einen konstanten, stationären Zustand. Pflanzen können zwar einen stationären Zustand erreichen, doch ist dies in der Außenwelt aufgrund der ständig schwankenden Umwelt nicht typisch für sie. Hier sind dynamische Modelle, wie das SIR-Modell oder andere Photosynthesemodelle, besonders gut geeignet."

msgid "MDL_FVCB_5"
msgstr "Trotz dieses erheblichen Nachteils wurde das FvCB-Modell weithin gelobt. Vor allem wegen seiner Einfachheit kann es leicht in andere, komplexere Modelle integriert werden, die sich zum Beispiel mit der Mesophyll-Leitfähigkeit&nbsp;[3] oder dem Einsatz von Bikarbonat-Transportern an der Chloroplastenhülle&nbsp;[4] beschäftigen. Wir haben eine interaktive Simulation mit den vier obigen Gleichungen erstellt, um dir diese Einfachheit zu zeigen. Um dich nicht zu überfordern, kannst du O, J und T<sub>p</sub> ändern, die jeweils nur die verschiedenen As (A<sub>c</sub>, A<sub>c</sub> und A<sub>c</sub>) ändern. Die übrigen Parameter wurden auf die Werte gesetzt, die in der Übersicht von S. von Caemmerer verwendet wurden, aus der wir diese Gleichungen entnommen haben&nbsp;[5]."

msgid "MDL_FVCB_SLIDERS_PRECISION"
msgstr "Präzision"

msgid "MDL_FVCB_SLIDERS_TEXT"
msgstr "Schieberegler"

msgid "MDL_FVCB_SLIDERS_O"
msgstr "Chloroplasten-O₂-Partialdruck [mbar]"

msgid "MDL_FVCB_SLIDERS_J"
msgstr "Elektronentransport-Rate (J) [µmol&nbsp;m⁻²&nbsp;s⁻¹]"

msgid "MDL_FVCB_SLIDERS_Tp"
msgstr "Rate der anorganischen Phosphatversorgung (Tₚ) [µmol&nbsp;m⁻²&nbsp;s⁻¹]"

#: pages/model_explain.py:384
msgid "MDL_FVCB_DEFAULT_PARAMETERS"
msgstr "Verwendete Standardparameter"

#: pages/model_explain.py:384
msgid "MDL_FVCB_DEFAULT_PARAMETERS_VARIABLES"
msgstr "Variablen"

#: pages/model_explain.py:384
msgid "MDL_FVCB_DEFAULT_PARAMETERS_VALUES"
msgstr "Werte"

#: pages/model_explain.py:384
msgid "MDL_FVCB_DEFAULT_PARAMETERS_UNITS"
msgstr "Einheiten"

#: pages/model_explain.py:408
msgid "MDL_FVCB_TOGGLE"
msgstr "Anzeigen"

#: pages/model_explain.py:408
msgid "MDL_FVCB_XLABEL"
msgstr "Interzellulär"

#: pages/model_explain.py:408
msgid "MDL_FVCB_YLABEL"
msgstr "Assimilation [µmol&nbsp;m⁻²&nbsp;s⁻¹]"

#: pages/model_explain.py:408
msgid "MDL_FVCB_EMPTY"
msgstr "Hier gibt's nichts zu sehen"

#: pages/model_explain.py:378
msgid "MDL_HEADLINE_E_PHOTOSYNTHESIS"
msgstr "### Das *e*-Photosynthesemodell"

# Grammarly checked
#: pages/model_explain.py:380
msgid "MDL_E_PHOTOSYNTHESIS_1"
msgstr "2012 entwickelten Xin-Guang Zhu, Yu Wang, Donald R. Ort und Stephen P. Long das *e*-Photosynthesemodell, um eine realistische Darstellung der Photosynthese zu ermöglichen [6]. Das Modell ist komplex und dynamisch und umfasst die meisten Komponenten der C<sub>3</sub>-Photosynthese, vereinfacht aber nur dort, wo es nötig ist. Es umfasst Reaktionen der Lichtabsorption, Lichtreaktionen und Kohlenstoffassimilation und baut auf den früheren Arbeiten von Zhu et al. auf, einschließlich ihres Fluoreszenzmodells [7] und ihres Kohlenstoffstoffwechselmodells [8]. Wenn du mit der C<sub>3</sub>-Fotosynthese nicht vertraut bist, kannst du in der unteren Dropbox mehr über die verschiedenen Arten der Fotosynthese erfahren."

#: pages/model_explain.py:390
msgid "MDL_E_PHOTOSYNTHESIS_2"
msgstr "Das e-Photosynthesemodell ist wie das SIR-Modell, aber in einem viel größeren Maßstab. Es verwendet ein ODE-System mit insgesamt 294 Gleichungen, von denen 113 die ODEs beschreiben. Mit Hilfe verschiedener biochemischer Parameter kann es die kleinsten Aspekte der Photosynthese berechnen, ohne dass ein bestimmtes Ziel für die Berechnung vorgegeben ist, wie z. B. die Kohlenstoffassimilation durch die FvCB. Das macht das Modell zu einem sehr allgemein gehaltenen Photosynthesemodell."

#: pages/model_explain.py:390
msgid "MDL_E_PHOTOSYNTHESIS_3"
msgstr "Das e-Photosynthesemodell wird jedoch vor allem wegen seiner Komplexität noch nicht viel genutzt. Damit es auch für andere Parameter als die, die bei seiner Erstellung verwendet wurden, funktioniert, müssen viele gemessene biochemische Parameter einbezogen werden. Oft müssen die Forscher diese Parameter selbst finden, da sie noch nicht veröffentlicht wurden. Das macht das Modell kompliziert und unpraktisch für die konkrete Forschung."

#: pages/model_explain.py:393
msgid "MDL_HEADLINE_BELLASIO"
msgstr "### Das Bellasio-Modell"

# Grammarly checked
#: pages/model_explain.py:395
msgid "MDL_BELLASIO_1"
msgstr "Das Bellassio-Modell wurde 2018 als Lösung für das Problem der zu vereinfachten stationären Modelle und zu komplexen dynamischen Modelle eingeführt [9]. Es unterteilt das Blattmodell in drei Kompartimente: die Atmosphäre, den Raum zwischen den Zellen und das Mesophyll, in dem der Großteil der photosynthetischen Aktivität der Pflanze stattfindet. Das Modell konzentriert sich auf die Prozesse der Kohlenstoffassimilation und integriert die Lichtreaktionen und das Verhalten der Stomata, d. h. die Prozesse, durch die die Pflanze während der Photosynthese Kohlendioxid aufnimmt und Wasserdampf abgibt. Die Komplexität des Modells liegt zwischen dem FvCB- und dem *e*-Photosynthesemodell, da es sich von beiden Modellen inspirieren lässt, um seinen Rahmen zu bilden."

# Grammarly checked
#: pages/model_explain.py:405
msgid "MDL_BELLASIO_2"
msgstr "Um das Modell zu erstellen, baute der Autor auf drei Hauptmodelle auf. Die Gleichungen von Yin et al. [10] für die Lichtreaktionen wurden modifiziert, das Kohlenstoff-Stoffwechselmodell von Zhu et al. [8] wurde für die Simulation der Kohlenstoffassimilation verwendet und ein hydro-mechanisches Stomata-Leitfähigkeitsmodell wurde unter Verwendung des früheren Modells des Autors [11] eingeführt. Die Endkohlenstoffassimilation wird mit Teilen des FvCB-Modells [2] berechnet."

#: pages/model_explain.py:405
msgid "MDL_BELLASIO_3"
msgstr "Um das Modell einem breiteren Nutzerkreis zugänglich zu machen, hat der Autor einige Vereinfachungen eingeführt, die die Rechenanforderungen reduzieren. Dadurch konnte das Modell mit einem Tabellenkalkulationsprogramm wie Microsoft Excel simuliert werden, so dass es auch für Personen mit begrenzter Rechenerfahrung zugänglich ist."

#: pages/model_explain.py:405
msgid "MDL_BELLASIO_4"
msgstr "Die Parameter des Modells basieren auf gemittelten Literaturwerten, die aus Originalgleichungen abgeleitet oder mit plausiblen Werten belegt wurden. So entsteht ein komplettes, vereinfachtes Paket der C<sub>3</sub>-Photosynthese auf Blattebene, das die rechnergestützte Modellierung für Pflanzenbiologen leichter zugänglich macht."

#: pages/model_explain.py:407
msgid "MDL_EXPANDER_C3C4CAM"
msgstr "Der Unterschied zwischen C3-, C4- und CAM-Pflanzen [12]"

#: pages/model_explain.py:408
msgid "MDL_HEADLINE_C3"
msgstr "### C<sub>3</sub> Pflanzen"

# Grammarly checked
#: pages/model_explain.py:409
msgid "MDL_C3_1"
msgstr "Die meisten Pflanzen sind C<sub>3</sub>-Pflanzen, das heißt, die erste stabile Verbindung, die bei der Kohlenstofffixierung entsteht, ist ein Drei-Kohlenstoff-Molekül namens 3-Posphoglycerat (3-PGA). Dieser Prozess findet in den Mesophyllzellen der Pflanzenblätter statt und beinhaltet eine Kette von biochemischen Reaktionen, die Kohlendioxid (CO<sub>2</sub>) in Kohlenhydrate wie Glukose umwandeln."

#: pages/model_explain.py:411
msgid "MDL_HEADLINE_C4"
msgstr "### C<sub>4</sub> Pflanzen"

# Grammarly checked
#: pages/model_explain.py:412
msgid "MDL_C4_1"
msgstr "Bei bestimmten Pflanzen ist die C<sub>4</sub>-Photosynthese ein alternativer Prozess, der sich entwickelt hat, um sich an heiße und trockene Umgebungen anzupassen. Im Gegensatz zur C<sub>3</sub>-Photosynthese steigert die C<sub>4</sub>-Photosynthese die Effizienz der Kohlenstofffixierung, indem sie CO<sub>2</sub> in der Nähe von RuBisCO in den Bündelscheidenzellen konzentriert. Diese Trennung verringert die Photorespiration, ein verschwenderischer Prozess, der in C<sub>3</sub>-Pflanzen bei hohen Temperaturen und niedrigen CO<sub>2</sub>-Konzentrationen auftreten kann. Die C<sub>4</sub>-Photosynthese kommt in verschiedenen Pflanzenfamilien vor, z. B. bei Gräsern (z. B. Mais, Zuckerrohr) und bestimmten dikotylen Pflanzen (z. B. Amaranthaceae, Chenopodiaceae). Sie ist eine Anpassung, die es den Pflanzen ermöglicht, in Umgebungen mit hohen Temperaturen, intensiver Sonneneinstrahlung und begrenzter Wasserverfügbarkeit zu gedeihen."

#: pages/model_explain.py:414
msgid "MDL_HEADLINE_CAM"
msgstr "### CAM-Pflanzen"

# Grammarly checked
#: pages/model_explain.py:415
msgid "MDL_CAM_1"
msgstr "Eine spezielle Form der Photosynthese, die CAM (Crassulacean Acid Metabolism) genannt wird, findet sich in Pflanzen, die an trockene und wasserarme Umgebungen angepasst sind. Diese Pflanzen verfügen über eine einzigartige Methode zur Trennung von Kohlenstofffixierung und Calvin-Zyklus, bei der sie nachts ihre Spaltöffnungen öffnen, um Kohlendioxid aufzunehmen und es als organische Säure mit vier Kohlenstoffatomen, wie Malat oder Apfelsäure, zu fixieren und in großen Vakuolen in ihren Zellen zu speichern. Tagsüber schließen sie ihre Spaltöffnungen, um den Wasserverlust durch Transpiration zu verhindern, und geben das CO<sub>2</sub> aus dem Malat in die Chloroplasten ab, um es im Calvin-Zyklus zu verwenden, ähnlich wie C<sub>3</sub>-Pflanzen. Der Name dieses Photosynthesewegs, \"Crassulaceen-Säurestoffwechsel,\", wurde von der Pflanzenfamilie der Crassulaceae abgeleitet, wo er zuerst entdeckt wurde. Er kommt aber auch in anderen Pflanzenfamilien wie Sukkulenten, Kakteen, Bromelien und einigen Orchideen vor. Diese Pflanzenarten sind häufig in Wüstenregionen und anderen Gebieten mit begrenzten Wasserressourcen zu finden."

# Grammarly checked
#: pages/model_explain.py:289
msgid "MDL_SIR_IMPLEMENTATION_MANUAL_1"
msgstr "Es muss darauf geachtet werden, dass der Vektor 'y0' mit den ausgepackten Variablennamen und den entsprechenden Differentialgleichungen übereinstimmt. Das Gleiche gilt für die Reihenfolge der Parameter `beta` und `gamma`. Trotzdem erhalten wir ein ähnliches Ergebnis, wenn wir es mit dem folgenden Code aufzeichnen:"

#: pages/model_explain.py:309
msgid "MDL_SIR_IMPLEMENTATION_MANUAL_2"
msgstr "Es ist klar, dass diese Art, Modelle zu schreiben, sehr fehleranfällig und schwer zu modularisieren ist. Deshalb können wir die Situation verbessern, indem wir `modelbase` verwenden."

#: pages/model_explain.py:314
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_1"
msgstr "Zunächst werden wir die Ratenfunktionen `Infektion` und `Erholung` als einfache Python-Funktionen auswerten."

#: pages/model_explain.py:318
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_2"
msgstr "Als nächstes können wir das Modell erstellen. Dazu geben wir alle Systemvariablen mit `add_compounds` und die Parameter als Wörterbuch mit `add_parameters` an"

# Grammarly checked
#: pages/model_explain.py:322
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_3"
msgstr "Zum Schluss fügen wir die Übergänge mit `add_reaction_from_args` hinzu und liefern:\n"
"1. einen Namen für den Übergang\n"
"2. einen Verweis auf die Ratenfunktion\n"
"3. die Stöchiometrie, die angibt, wie sich die Rate auf die Systemvariablen auswirkt\n"
"4. die Argumente für die Ratenfunktion"

# Grammarly checked
#: pages/model_explain.py:326
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_4"
msgstr "Daraus stellt modelbase automatisch ein System von ODEs zusammen, das untersucht werden kann. Um kleinere Fehler zu vermeiden, prüft modelbase während dieses Prozesses auf typische Inkonsistenzen und zeigt entsprechende Warnungen an.\n\n"
"Du kannst das System dann ganz einfach simulieren und aufzeichnen, wie unten abgebildet, was dir die Grafik liefert, die du vielleicht schon gesehen hast:"

# Grammarly checked
#: pages/model_explain.py:346
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_5"
msgstr "Die Stärke des Ansatzes liegt in der Einfachheit der Modellerweiterung. So können wir beispielsweise das SIR-Modell, das auch als SIRD-Modell bekannt ist, um ein Kompartiment für verstorbene Personen erweitern, indem wir eine neue Variable, einen Parameter und eine Reaktion einführen:"

#: pages/model_explain.py:350
msgid "MDL_SIR_IMPLEMENTATION_MODELBASE_6"
msgstr "Das wäre bei der manuellen Vorgehensweise sehr viel mühsamer gewesen."

msgid "MDL_LINK_PLANTS_AND_PYTHON"
msgstr "*Wenn Sie mit Python noch nicht vertraut sind, werfen Sie einen Blick auf [Plants and Python](https://plantsandpython.github.io/PlantsAndPython), wo Sie Python lernen können und wie es in der Wissenschaft verwendet wird.*"

# Grammarly checked
#: pages/model_explain.py:258
msgid "MDL_MATHEMATICAL_MODELLING_EXAMPLE_SIMPLE"
msgstr "Wir haben nun erfolgreich ein epidemiologisches Modell implementiert und verwendet. Ein solches Modell wurde kürzlich als Grundlage für zahlreiche komplexere Modelle verwendet, um die Ausbreitung eines Virus in mehreren Populationen auf der ganzen Welt zu verfolgen. Die Einfachheit unseres Anwendungsbeispiels macht es möglich, dass es mit Stift und Papier gelöst werden kann. Wir haben jedoch Python verwendet, um uns das Leben leichter zu machen. Du kannst es in den anderen Registerkarten über diesem Abschnitt finden."



#: pages/first_analysis.py:11
msgid "FAL_HEADLINE_EXPERIMENTS"
msgstr "# Experimente *in silico*"

msgid "FAL_LEARNING_OBJECTIVES"
msgstr "### Lernziele\n"
"- Du lernst, ein Photosynthesemodell zu simulieren und die Ergebnisse zu interpretieren\n"
"- Du verstehst die mathematischen Gleichungen des Modells und wie man es in der Programmiersprache Python implementiert\n"
"#### Was du wissen musst:\n"
"- Lesen und Analysieren von Diagrammen"

#: pages/first_analysis.py:13
msgid "FAL_HEADLINE_MODEL_CONSTRUCTION"
msgstr "## Konstruktion des Modells"

#: Grammarly checked
#: pages/first_analysis.py:15
msgid "FAL_CONSTRUCTION_EXPLANATION_1"
msgstr "Die Fotosynthese ist ein komplexer Prozess, an dem zahlreiche Akteure beteiligt sind: Proteine, Enzyme, \
        Elektronenträger, Protonenpumpen, Ionenkanäle und viele mehr. Obwohl jeder von ihnen eine wichtige Rolle im \
        Gesamtprozess spielt, haben wir für die Studie zum Lichtspeicher eine maximale Reduzierung der Modellkomplexität \
        angestrebt. Wir haben uns daher ausschließlich auf die pH-regulierten, nicht-fotochemischen Prozesse im Zusammenhang \
        mit dem Fotosystem II konzentriert und nur die Prozesse in das Modell aufgenommen, die entweder direkt von der NPQ \
        betroffen sind oder das Ausmaß der NPQ regulieren (Matuszyńska et al., [2016](https://doi.org/10.1016/j.bbabio.2016.09.003)). "

# Grammarly checked
#: pages/first_analysis.py:17
msgid "FAL_CAPTION_MODEL_NPQ"
msgstr "Schema der Komponenten, die in dem auf dieser Website verwendeten vereinfachten mathematischen Modell enthalten sind. Das Modell wurde 2016 entwickelt und enthält eine detaillierte Beschreibung der internen Prozesse im Photosystem II (PSII), einschließlich der Prozesse, die die Dynamik der Quencher (Psbs und Zeaxanthin) beeinflussen."

#: Grammarly checked
#: pages/first_analysis.py:19
msgid "FAL_CONSTRUCTION_EXPLANATION_2"
msgstr "Anstatt also die gesamte Pflanze oder gar den gesamten Chloroplasten \
        zu modellieren, haben wir einen Reduktionszyklus (siehe Abbildung) angewandt, der auf einem streng reduktionistischen \
        Ansatz beruht, und es ist uns gelungen, das Modell als ein System von nur sechs gewöhnlichen Differenzialgleichungen \
        darzustellen! Jede dieser Gleichungen stellt die dynamische Änderungsrate von:"

#: Anna's explanation of the model
#: pages/first_analysis.py:20
msgid "FAL_RATES_1"
msgstr "1) der reduzierte Anteil des Plastochinon-Pools ($PQH_2$),"

#: Anna's explanation of the model
#: pages/first_analysis.py:21
msgid "FAL_RATES_2"
msgstr "2) die stromale Konzentration von ATP (ATP),"

#: Anna's explanation of the model
#: pages/first_analysis.py:22
msgid "FAL_RATES_3"
msgstr "3) die luminale Protonenkonzentration ($H$),"

#: Anna's explanation of the model
#: pages/first_analysis.py:23
msgid "FAL_RATES_4"
msgstr "4) der Anteil der nicht protonierten Proteine (PsbS),"

#: Anna's explanation of the model
#: pages/first_analysis.py:24
msgid "FAL_RATES_5"
msgstr "5) der Anteil von Violaxanthin am Gesamtpool der Xanthophylle (Vx),"

#: Anna's explanation of the model
#: pages/first_analysis.py:25
msgid "FAL_RATES_6"
msgstr "6) der Anteil des aktiven ATPase-Enzyms (ATPase<sup>&midast;</sup>)."

msgid "FAL_COMPONENTS_EXPLANATION_HEADER"
msgstr "Brauchst du eine Erinnerung an die oben genannten Moleküle und Proteinkomplexe? *Klick hier*"

msgid "FAL_MOLECULES_EXPLANATION_TABLE"
msgstr "#### Moleküle\n"
            "| Name | Beschreibung |\n"
            "| --- | --- |\n"
            "| Plastochionon (PQ) | Ein Molekül, das zwei Elektronen transportieren kann; kann oxidiert (ox) oder reduziert (rot) werden |\n"
            "| Adenosintriphosphat (ATP) | Ein Molekül, das chemische Energie zum Antrieb von Reaktionen übertragen kann |\n"
            "| Xantophyll | Eine Gruppe von Carotinoidpigmenten; umfasst Viola- und Zeaxanthin |"

msgid "FAL_ENZYMES_EXPLANATION_TABLE"
msgstr "#### Proteinkomplexe\n"
            "| Name | Beschreibung |\n"
            "| --- | --- |\n"
            "| Photosystem II (PSII) | Ein lichtabsorbierender Proteinkomplex; Nutzt die Anregung, um Wasser zu spalten und die Photosynthese anzutreiben |\n"
            "| Photosystem II Untereinheit S (PsbS) | Ein Quencherprotein des PSII; Seine Aktivität hängt vom pH-Wert ab |\n"
            "| Plastidiale terminale Oxidase (PTOX) | Ein oxigenreduzierender Proteinkomplex; Produziert Wasser, um eine Überreduktion von PQ zu vermeiden; |\n"
            "| Cytochrom b6f-Komplex (Cyt b6f) | Ein protonenpumpender Proteinkomplex |\n"
            "| ATPSynthase (ATPase) | Ein ATP-synthetisierender Proteinkomplex; nutzt den elektrochemischen Protonengradienten |"

#: Anna's explanation of the model
#: pages/first_analysis.py:28
msgid "FAL_HEADLINE_MODEL_EQUATIONS"
msgstr "### Mathematische Gleichungen"

#: Anna's explanation of the model
#: pages/first_analysis.py:29
msgid "FAL_MODEL_EQUATIONS_INTRODUCTION"
msgstr "Die sechs gekoppelten gewöhnlichen Differenzialgleichungen (ODE)"

#: Anna's explanation of the model
#: pages/first_analysis.py:43
msgid "FAL_REACTION_RATES"
msgstr "Reaktionsgeschwindigkeiten"

#: Anna's explanation of the model
#: pages/first_analysis.py:44
msgid "FAL_RATES_DYNAMIC"
msgstr "###### In der dynamischen Beschreibung des Systems verwendete Reaktionsraten"

#: Anna's explanation of the model
#: pages/first_analysis.py:58
msgid "FAL_RATE_QUENCHER"
msgstr "###### Reaktionsraten zur Berechnung der Quencheraktivität und der Gesamtrate"

#: Anna's explanation of the model
#: pages/first_analysis.py:69
msgid "FAL_HEADLINE_IMPLEMENTATION"
msgstr "### Implementierung"

#: Grammarly checked
#: pages/first_analysis.py:71
msgid "FAL_IMPLEMENTATION_DESCRIPTION"
msgstr "Das mathematische Modell der fotosynthetischen Elektronentransportkette wurde in der objektorientierten Sprache \
        (OOL) Python mit dem Paket modelbase implementiert. Der Code mit den Differenzialgleichungen, Reaktionsraten, dem \
        Parameterraum und den für die Simulationen verwendeten Anfangsbedingungen ist öffentlich zugänglich: \
        [hier](www.github.com/QTB-HHU/npqmodel). In der nachstehenden Dropdown-Liste findest du auch eine Schritt-für-Schritt-Anleitung, wie du sie selbst umsetzen kannst."

#: pages/first_analysis.py:271
msgid "FAL_HEADLINE_ANALYSE"
msgstr "## Die Datenanalyse"

# Grammarly checked
#: pages/first_analysis.py:272
msgid "FAL_INTRODUKTION"
msgstr "Nachdem Sie nun die Messmethode zur Überprüfung des NPQ an Pflanzen kennengelernt haben, werden wir Messungen mit dem Modell durchführen, um den Einfluss der abiotischen Einflussfaktoren abzuschätzen. Im Folgenden kann das Modell mit Hilfe der Schieberegler mit verschiedenen Parametern wiederholt werden.\n\n Die Grafik zeigt die Fluoreszenz als orangefarbene Linie während einer anfänglichen Dunkelphase (blauer Hintergrund) und einer anschließenden Lichtphase (oranger Hintergrund) mit wählbarer Intensität. Zu Beginn der Dunkelphase und in der Lichtphase werden sättigende Lichtimpulse gegeben, die man als Spitzen im Fluoreszenzsignal sehen kann. Mit den Schiebereglern kann man die Lichtintensität während der Lichtphase, die Dauer der Simulation, den zeitlichen Abstand der Sättigungspulse und die Aktivierungs- und Deaktivierungsraten des NPQ-Anpassungsprozesses einstellen."

#: pages/first_analysis.py:274
msgid "FAL_HEADLINE_SLIDER"
msgstr "##### Verwendung der Schieberegler:"

# Grammarly checked
#: pages/first_analysis.py:275
msgid "FAL_EXPLANATNION"
msgstr "Ändere zunächst die Schieberegler entsprechend dem Test, den du simulieren möchtest. Starte dann die \
        Berechnung, indem du auf die Schaltfläche klickst. Das berechnete Diagramm wird angezeigt. Sobald du die \
        Schieberegler erneut änderst, verschwindet die Grafik und du kannst eine neue Grafik laden."

msgid "FAL_VIDEO_TRANSCRIPT_SLIDERS"
msgstr "In diesem Video erhältst du wichtige Informationen über die Verwendung der Schieberegler und die Analyse der Diagramme. Du hast bereits gelernt, wie die Graphen aussehen werden und dass sie von unserem eigenen Computermodell berechnet und erstellt werden können. Jetzt kannst du die PAM-Parameter mit den Schiebereglern anpassen, um dein individuelles Testszenario zu erstellen, und auf die Schaltfläche klicken, um die resultierende Grafik zu sehen.\n\nAber wie analysieren wir die Grafik? Nun, das hängt davon ab, wonach man sucht. Die Fluoreszenz wird auf der y-Achse und die Zeiten auf der x-Achse aufgetragen. Für die Fluoreszenz wurde zunächst die maximale Fluoreszenz beim Sättigungsimpuls gemessen. Dann wurde die gemessene Fluoreszenz durch die maximale Fluoreszenz aufgetragen. Um zu sehen, wie der Stress der Pflanze über einen bestimmten Zeitraum hinweg zu- oder abnimmt, können wir die Spitzen der Pulse miteinander verbinden und die Progression betrachten. Zum Schluss möchten wir noch zwei Tipps mit dir teilen: Erstens: Wenn du zwei PAM-Tests vergleichen möchtest, kannst du die Diagramme herunterladen, indem du auf die drei Punkte in der oberen rechten Ecke klickst. Zweitens: Wenn du den Berechnungsprozess abbrechen möchtest, musst du auf 'Stop' in der oberen rechten Ecke der PAM-App klicken. Und nun viel Spaß beim Analysieren des von dir selbst erstellten Diagramms."

#: pages/first_analysis.py:354
msgid "FAL_SLIDER_TIME"
msgstr "Versuchsdauer in Minuten"

#: pages/first_analysis.py:376
msgid "FAL_SLIDER_DARKLENGTH"
msgstr "Dauer der Dunkelphase in Sekunden"

#: pages/first_analysis.py:385
msgid "FAL_SLIDER_SATURATE"
msgstr "Lichtintensität des Sättigungsimpulses (SP) in μmol&nbsp;m⁻²&nbsp;s⁻¹"

#: Anna's explanation of the model
#: pages/first_analysis.py:74
msgid "FAL_IMPLEMENTATION_TO_EXPERT"
msgstr ""

#: pages/first_analysis.py:77
msgid "FAL_MODEL_CODE_EXPANDER"
msgstr "Schritt-für-Schritt-Leitfaden für die Implementierung"

#: pages/first_analysis.py:78
msgid "FAL_CONSTRUCTION_HEADER"
msgstr "#### Modellbildung"

# Grammarly checked
#: pages/first_analysis.py:79
msgid "FAL_CONSTRUCTION_1"
msgstr "Hier findest du eine Schritt-für-Schritt-Anleitung für die Implementierung des auf dieser Website verwendeten Modells. Wir werden das Paket `modelbase` verwenden, da es alles einfacher macht, als einen Python-Integrator von Grund auf zu verwenden. Um den Unterschied zu sehen, gehe zurück zur Seite **Computational Models**, wo du siehst, wie das gleiche Modell mit beiden Methoden erstellt wird.\n\n"
"Wenn Sie die Entwicklung mitverfolgen möchten, können Sie die einzelnen Codeblöcke kopieren und in eine Python-IDE einfügen. Am Ende werden Sie ein vollständiges Modell haben. Das erste, was wir mit dem `modelbase`-Paket tun müssen, ist unser Modell mit der `Model()`-Klasse zu definieren:"

# Grammarly checked
#: pages/first_analysis.py:86
msgid "FAL_CONSTRUCTION_2"
msgstr "Wir müssen uns die **Reaktionsraten** und die **ODEs** ansehen, die wir in unser Modell einbauen wollen. Mit ihnen können wir entscheiden, welche **Parameter** und **Verbindungen** wir benötigen. Wir müssen sie in einem **Dict** und einer **List** definieren. Es ist auch eine gute Praxis, Kommentare nach jedem Wert zu verwenden, um kurz zu erklären, was diese Variable darstellt und, falls vorhanden, die Einheit."

# Grammarly checked
#: pages/first_analysis.py:102
msgid "FAL_CONSTRUCTION_3"
msgstr "Das definierte Modell verfügt über integrierte Funktionen zum einfachen Hinzufügen von Parametern und Verbindungen:"

# Grammarly checked
#: pages/first_analysis.py:109
msgid "FAL_CONSTRUCTION_4"
msgstr "Dieses Modell verwendet auch einige **Parameter**, die von anderen Parametern abgeleitet sind. Außerdem verbergen sich einige Informationen hinter der Verbindung zwischen Verbindungen, die nicht als Parameter zusammengefasst werden können. Allerdings hat `modelbase` einige Tricks, um diese beiden Probleme zu überwinden, nämlich `abgeleitete_Parameter` und `algebraische_Module`. Wir müssen die Berechnungen zunächst als Funktionen definieren und sie dann dem Modell hinzufügen."

# Grammarly checked
#: pages/first_analysis.py:125
msgid "FAL_CONSTRUCTION_5"
msgstr "Wir haben dem Modell nun alle Bausteine gegeben, die es braucht, aber es muss wissen, was es damit machen soll. Dazu braucht es Anweisungen. Wir müssen die Reaktionsraten in 'Funktionen' übersetzen, um diese Anweisungen zu erstellen. Du wirst sehen, dass einige dieser Funktionen auch andere Funktionen aufrufen. Diese dienen nur dazu, den Code lesbarer zu machen oder die gleichen Berechnungen zu vermeiden."

# Grammarly checked
#: pages/first_analysis.py:141
msgid "FAL_CONSTRUCTION_6"
msgstr "Das Modell verfügt über alle notwendigen Komponenten und Anweisungen. Dennoch müssen wir angeben, welcher Baustein den einzelnen Anweisungen entspricht und wie sie miteinander verbunden sind. Dazu müssen wir die ODEs untersuchen und die Stöchiometrie festlegen."

# Grammarly checked
#: pages/first_analysis.py:148
msgid "FAL_CONSTRUCTION_7"
msgstr "Wir haben nun erfolgreich ein funktionierendes Modell erstellt. Um es zu testen, müssen wir es jedoch simulieren. Dieser Abschnitt führt Sie Schritt für Schritt durch den Prozess der Erstellung des Diagramms mit den unten auf dieser Seite aufgeführten Standardwerten. Dieser Teil kann komplizierter sein als der Modellierungsteil und erfordert einige Versuche und Fehler. Wir werden unseren Gedankengang erläutern, damit du ihn nachvollziehen kannst. Dennoch empfehlen wir dir, diesen Abschnitt sorgfältig zu lesen, um die Darstellung erfolgreich zu erstellen."

#: pages/first_analysis.py:150
msgid "FAL_SIMULATION_HEADER"
msgstr "#### Modell-Simulation"

#: pages/first_analysis.py:152
msgid "FAL_SIMULATION_1"
msgstr "Zunächst wollen wir prüfen, ob unsere Darstellung funktioniert. Dazu erzeugen wir ein 'Simulator'-Objekt, indem wir die Klasse 'Simulator()' aus 'ModelBase' verwenden."

# Grammarly checked
#: pages/first_analysis.py:159
msgid "FAL_SIMULATION_2"
msgstr "Das Modell benötigt eine Ausgangsbasis für seine Berechnungen. Die Parameter wurden bei der Erstellung des Modells festgelegt, so dass wir nun die Anfangskonzentrationen oder -mengen der Verbindungen angeben müssen."

# Grammarly checked
#: pages/first_analysis.py:166
msgid "FAL_SIMULATION_3"
msgstr "Wir können jetzt mit den Simulationen beginnen. Wählen wir einen zufälligen Zeitpunkt für die Simulation des Modells. Nach der Simulation können wir die Ergebnisse visualisieren und auf Implementierungsfehler prüfen. Dieser Test ist einfach, denn ein leeres oder nicht vorhandenes Diagramm weist auf ein Problem hin. Unser bevorzugtes Plot-Tool ist `matplotlib`, das auch in `modelbase` integriert ist."

# Grammarly checked
#: pages/first_analysis.py:189
msgid "FAL_SIMULATION_4"
msgstr "Wir haben unser Modell erfolgreich simuliert und ein grundlegendes Diagramm erstellt. Die Darstellung muss jedoch noch wichtige Details enthalten, die wir definieren müssen. Diese Aspekte umfassen:\n"
                "\n - Darstellung der Fluoreszenzveränderungen im Zeitverlauf\n"
                "\n - Einbeziehung einer anfänglichen dunklen Phase, gefolgt von einer hellen Phase\n"
                "\n - Anzeige von sättigenden Lichtimpulsen zu Beginn jeder Phase und in bestimmten Abständen während der Lichtphase\n"
                "\n Um diese Probleme zu lösen, werden wir jedes einzeln angehen. Wir empfehlen, den Code bei jedem neuen Schritt zu ersetzen, der den `matplotlib`-Import am Anfang enthält, wenn du diesem Leitfaden folgst. Du wirst während des gesamten Prozesses viele Ähnlichkeiten feststellen."

#: pages/first_analysis.py:190
msgid "FAL_SIMULATION_FLOURESCENCE_HEADER"
msgstr "##### Fluoreszenz anzeigen"

# Grammarly checked
#: pages/first_analysis.py:191
msgid "FAL_SIMULATION_FLOURESCENCE_1"
msgstr "Bei der Verwendung von 'modelbase' für Simulationen werden die Verbindungen in der Regel in den Standarddiagrammen angezeigt. In unserem Fall müssen wir jedoch die Veränderung der Fluoreszenz darstellen, die wir nicht als Verbindung, sondern als algebraisches Modul integriert haben. Daher müssen wir diese Änderung speziell auswählen."

# Grammarly checked
#: pages/first_analysis.py:214
msgid "FAL_SIMULATION_FLOURESCENCE_2"
msgstr "Um das Ablesen der Diagramme zu vereinfachen, werden wir die Fluoreszenzwerte auf ihr Maximum relativieren. Leider führt dies zu einem komplexeren Code. Wir werden zeigen, wie man dies erreicht, indem man die Simulationsdaten aus `modelbase` extrahiert. Es gibt jedoch mehrere Methoden, dies zu erreichen. Es ist erwähnenswert, dass das Diagramm etwas anders aussehen wird, da `modelbase` bestimmte Aspekte der Darstellung für eine schnellere Verarbeitung modifiziert. Nichtsdestotrotz werden wir sicherstellen, dass das Diagramm am Ende ästhetisch ansprechend ist."

#: pages/first_analysis.py:237
msgid "FAL_SIMULATION_PHASES_HEADER"
msgstr "##### Verschiedene Phasen und Sättigungsimpulse"

# Grammarly checked
#: pages/first_analysis.py:238
msgid "FAL_SIMULATION_PHASES_1"
msgstr "Wir können die letzten beiden Probleme in einem Code lösen, indem wir jede Phase mit einem Sättigungsimpuls beginnen. Allerdings müssen wir einige Entscheidungen treffen bezüglich:\n"
"\n - Die Dauer unserer Simulation\n"
"\n - Die Helligkeit der dunklen und hellen Phasen sowie der Sättigungsimpulse\n"
"\n - Die Länge der Dunkelphase\n"
"\n - Die Anzahl der Sättigungsimpulse, die wir während der hellen Phase wünschen.\n"
"\n Der nachstehende Code zeigt die von uns gewählten Werte an, du kannst aber auch deine bevorzugten Werte verwenden und das Ergebnis beobachten. Dies wird auf dieser Website am Ende der Seite auch noch einmal verdeutlicht."

#: pages/first_analysis.py:261
msgid "FAL_SIMULATION_PRETTY_HEADER"
msgstr "##### Schöner machen"

# Grammarly checked
#: pages/first_analysis.py:262
msgid "FAL_SIMULATION_PRETTY_1"
msgstr "Die Simulation zeigt derzeit alle gewünschten Informationen an. Um die visuelle Attraktivität und das Verständnis zu verbessern, können wir die Bibliothek `matplotlib` verwenden, um ein ausgefeiltes Diagramm zu erstellen, das dem unten auf der Seite ähnelt. Wir werden zwar keine ausführliche Anleitung geben, aber du kannst dir trotzdem den verwendeten Code ansehen."

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_EXPANDER"
msgstr "So werden die Ergebnisse der Modellierung interpretiert"

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_HEADER_SINGLE"
msgstr "### Graphen mit einem Ergebnis"

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_1"
msgstr "Wir können das Diagramm in drei Phasen betrachten:\n"
            "1. Die erste Phase findet in der Dunkelheit statt, so dass unsere anfängliche modellierte Fluoreszenz *F₀* beträgt. Dann simulieren wir einen sättigenden Lichtpuls, der die Fluoreszenz schnell bis zum Spitzenwert *Fₘ* ansteigen lässt. Fₘ sollte die maximale Fluoreszenz sein, die die Pflanze insgesamt erzeugen kann, so dass wir normalerweise die anderen Fluoreszenzsignale damit vergleichen. *Fₜ*, die außerhalb der Sättigungspulse simulierte Fluoreszenz, zeigt das Verhalten des Photosystems unter aktinischem Licht. Wir sehen, dass Fₜ danach wieder auf das F₀-Niveau abfällt, was bedeutet, dass sich die Pflanze von der Sättigung ihrer Photosysteme erholt.\n"
            "2. Wir leiten die folgende Phase mit einem weiteren Sättigungspuls ein. Da dieser Spitzenwert der Fluoreszenz (*Fₘ'*) der gleiche ist wie Fₘ, scheint die Pflanze noch keinen Lichtschutz aktiviert zu haben. Anstatt jedoch in die Dunkelheit zurückzukehren, schalten wir nun das (aktinische) Licht auf 100 μmol&nbsp;m⁻²&nbsp;s⁻¹ ein. Dies führt dazu, dass die Fluoreszenz nach dem Sättigungspuls viel schneller abnimmt und auf ein etwas höheres Niveau als F₀ fällt, das bis zum Ende des Experiments anhält. Die erhöhte Fluoreszenzausbeute zeigt uns, dass die Pflanze jetzt eine größere Menge an Anregungsenergie in Fluoreszenz verliert, was bedeutet, dass sie stärker gestresst ist als im Dunkeln.\n"
            "3. Wenn wir einen weiteren Sättigungsimpuls geben, sehen wir, dass das neue Fluoreszenzmaximum Fₘ' deutlich niedriger ist als Fₘ, was uns zeigt, dass das nicht-photochemische Quenching aktiviert wurde und die Anregungsenergie sowohl von der Fluoreszenz als auch von der Photosynthese abzieht. Diese Beobachtung spiegelt sich direkt in der Formel zur Schätzung von NPQ wider:"

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_2"
msgstr "Auf die gleiche Weise kannst du Simulationsgraphen mit geänderten Parametern und noch mehr Lichtphasen analysieren. Beobachte im Allgemeinen, wie sich Fₜ und Fₘ' im Laufe der Zeit verhalten, insbesondere wenn sich die Lichtbedingungen ändern. Verbinde dann deine Beobachtungen mit deinem Wissen über NPQ. Wenn du Interesse hast, kannst du auch die berechneten Werte für NPQ und PSII-Effizienz in der <a href='#' id='4Bio'>4Bio</a>-Version verwenden."

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_HEADER_DUO"
msgstr "### Grafiken mit alten und neuen Ergebnissen"

#: pages/first_analysis.py:262
msgid "FAL_GRAPH_EXPLANATION_DUO"
msgstr "Wenn man die Modellparameter ändert und eine weitere Simulation durchführt, wird das alte Simulationsdiagramm als gestrichelte Linie im Hintergrund des neuen Diagramms angezeigt. Auf diese Weise lassen sich die beiden Diagramme leicht vergleichen und die Auswirkungen der Änderungen untersuchen. Im gezeigten Fall haben wir die aktinische Lichtintensität von 100 (alt) auf 500 μmol&nbsp;m⁻²&nbsp;s⁻¹ (neu) erhöht. Da die Dunkelphase in allen Simulationen gleich ist, gibt es keinen Unterschied in Phase eins. Nach dem Sättigungsimpuls in Phase zwei ist die Fluoreszenz (Fₜ₋₅₀₀) bei der höheren Lichtintensität stark erhöht und braucht viel länger, um abzunehmen. Dieses Verhalten deutet darauf hin, dass das Photosystem viel mehr Lichtstress ausgesetzt ist und mehr Zeit benötigt, um das NPQ ausreichend zu aktivieren. Phase drei bestätigt diese Hypothese, da wir stark reduzierte Fₘ'-Werte simulieren, was zu einer erhöhten geschätzten NPQ gemäß der vorherigen Formel führt. Schließlich sehen wir, dass die Pflanze eine ähnliche Endfluoreszenz erreicht wie mit dem schwächeren aktinischen Licht, was bedeutet, dass durch die starke NPQ-Aktivierung ein ähnlich niedriges Stressniveau erreicht wird."

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_EXPANDER"
msgstr "Schwierigkeiten, die Simulationsergebnisse mit der Biologie in Verbindung zu bringen? Versuche es mit unseren **Leitfragen**."

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_HEADER"
msgstr "### Leitfragen"

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_TOGGLE"
msgstr "**Siehe unsere Interpretation**"

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_QUESTIONS"
msgstr "Mit den Standardwerten zeigt dir die folgende Simulation ein typisches PAM-Experiment. Wenn du die Schieberegler ausprobierst, könntest du Folgendes versuchen:\n"
        "1. :blue[Am frühen Morgen oder an einem bewölkten Tag findet man eine Lichtintensität von 100 μmol&nbsp;m⁻²&nbsp;s⁻¹, sie ist also recht niedrig. An einem milden Tag könnte die Sonne mit 500 μmol&nbsp;m⁻²&nbsp;s⁻¹ an Photonen scheinen - versuche das mal:]\n"
        "   - Wie unterscheidet sich die Reaktion beim Einschalten des Lichts von der Reaktion bei 100 μmol&nbsp;m⁻²&nbsp;s⁻¹? Was bedeutet das für die Pflanze?\n"
        "Wie unterscheiden sich die Sättigungsimpulssignale zwischen der niedrigeren und der höheren Intensität?\n"
        "2. :blue[An einem heißen und sonnigen Tag können höhere Intensitäten von über 900 μmol&nbsp;m⁻²&nbsp;s⁻¹ aktinisches Licht erreicht werden. Probiere dies in einer Simulation aus und prüfe, ob deine bisherigen Beobachtungen auch hier zutreffen.]\n"
        "   - Vergleiche die Fluoreszenz ganz am Ende der Simulation zwischen Standard- und Starklicht - gibt es einen Unterschied?\n"
        "3. :blue[Bei dieser Intensität können wir viel besser sehen, wie die Fluoreszenzspitzen während der Sättigungspulse mit der Zeit abnehmen. Aber in den ersten zwei Minuten scheint viel zu passieren, was wir nicht sehen können.]\n"
        " Verringere die Zeit zwischen den Sättigungsimpulsen. Was kannst du sehen?\n"
        "   - Scheint es, als ob die Sättigungsimpulse die Photosynthese der Pflanze beeinflussen?\n"
        "4. :blue[Je länger ein Experiment dauert, desto mehr Arbeit bedeutet es für den Experimentator. Versuchen Sie, die Messzeit auf 1 Minute zu senken und dann auf 10 Minuten zu erhöhen.]\n"
        "   - Wäre es in unserem Fall sinnvoll, die Messzeit zu verkürzen? Warum oder warum nicht?\n"
        "   - Hängt dies von den anderen Einstellungen ab?"

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_QUESTIONS_EXTEND"
msgstr ""

#: pages/first_analysis.py:321
msgid "FAL_GUIDING_ANSWERS"
msgstr "Mit den Standardwerten wird in der folgenden Simulation ein typisches PAM-Experiment durchgeführt. Wenn du die Schieberegler ausprobierst, könntest du Folgendes versuchen:\n"
        "1. :blue[Am frühen Morgen oder an einem bewölkten Tag findet man eine Lichtintensität von 100 μmol&nbsp;m⁻²&nbsp;s⁻¹, sie ist also recht niedrig. An einem milden Tag könnte die Sonne mit 500 μmol&nbsp;m⁻²&nbsp;s⁻¹ Photonen scheinen - versuche es stattdessen:]\n"
        "    - Das Fluoreszenzsignal nach dem Einschalten des Lichts, kurz nach dem Peak, ist sehr viel höher. Das liegt daran, dass das Chlorophyll viel mehr Energie erhält, wodurch die Pflanze unter Lichtstress gerät.\n"
        "    - Die späteren Sättigungsimpulse, nach ca. zwei Minuten, sind kürzer als die bei schwachem Licht. Daher hat die Pflanze die Wärmeabschreckung, auch NPQ genannt, als Lichtschutzmechanismus erhöht.\n"
        "2. :blue[An einem heißen und sonnigen Tag können höhere Intensitäten von über 900 μmol &nbsp;m⁻²&nbsp;s⁻¹ aktinisches Licht erreicht werden. Versuche dies in einer Simulation und prüfe, ob deine bisherigen Beobachtungen auch hier zutreffen.]\n"
        "    - Bei dieser höheren Lichtintensität können wir auch die erhöhte Fluoreszenz nach dem Einschalten und die weiter abnehmende Fluoreszenz während der Pulse sehen.\n"
        "    - Die Fluoreszenz am Ende der sehr hohen Lichtphase ist im Vergleich zur niedrigen Lichtsimulation erhöht. Daher ist die Pflanze selbst nach der vollständigen Aktivierung ihres NPQ-Mechanismus noch stärker gestresst. Wahrscheinlich ist das Löschpotenzial des NPQ-Prozesses der Pflanze erschöpft, und eine höhere Lichtintensität könnte die Pflanze schädigen.\n"
        "3. :blue[Bei dieser Intensität können wir viel besser sehen, wie die Fluoreszenzspitzen während der Sättigungsimpulse mit der Zeit abnehmen. Aber in den ersten zwei Minuten scheint viel zu passieren, was wir nicht sehen können.]\n"
        "    - Mit häufigeren Pulsen können wir die abfallende Spitzenfluoreszenz deutlicher sehen. Daher sehen wir die NPQ-Aktivierung in einer höheren Auflösung und können versuchen, eine Funktion zur Schätzung der Aktivierungsrate zu erstellen \n"
        "    - Normalerweise gehen wir davon aus, dass die Impulse keinen Einfluss auf die Photosynthese haben. Nach einem Impuls kehrt das Signal auf das vorherige Niveau zurück, und die Spitzenhöhe scheint immer gleich abzunehmen. \n"
        "    - Wenn wir jedoch bei schwachem Licht Impulse in schneller Folge geben, können die Sättigungsimpulse eine Wirkung wie aktinisches Licht haben. Das kann man sehen, wenn man eine Lichtintensität von 50 μmol &nbsp;m⁻²&nbsp;s⁻¹ mit Impulsen alle 5 s ausprobiert. Hier nimmt die Peakhöhe stärker ab als bei weniger Impulsen. \n"
        "4. :blue[Je länger ein Experiment dauert, desto mehr Arbeit bedeutet es für den Experimentator. Versuche, die Messzeit auf 1 min zu senken und dann auf 10 min zu erhöhen.]\n"
        "    - Bei einer Lichtintensität von 500 bis 900 μmol&nbsp;m⁻²&nbsp;s⁻¹ scheint die NPQ-Anpassung nach drei bis vier Sekunden abgeschlossen zu sein. Wir sollten mindestens so lange messen, um den gesamten Prozess zu erfassen.\n"
        "    - Bei niedrigeren Lichtintensitäten dauert dieser Anpassungsprozess weniger lang. Daher könnte eine kürzere Messung machbar sein."

#: pages/first_analysis.py:262
msgid "FAL_GUIDING_ANSWERS_EXTEND"
msgstr ""

#: pages/plant_memory.py:380
msgid "MEM_HEADLINE_BRAIN"
msgstr "# Das Pflanzengedächtnis"

msgid "MEM_LEARNING_OBJECTIVES"
msgstr "### Lernziele\n"
"- Du lernst, wie sich Pflanzen an vergangene Lichtverhältnisse erinnern können\n"
"- Du kannst den Lichtgedächtniseffekt der Pflanzen anhand von Simulationen zeigen\n"
"#### Was du wissen musst:\n"
"- Lesen und Analysieren von Diagrammen"

# Grammarly checked
#: pages/plant_memory.py:387
msgid "MEM_INTRODUCTION_BRAIN"
msgstr "Nun, da du herausgefunden hast, wie Pflanzen auf unterschiedliche Lichtintensitäten reagieren, haben wir Neuigkeiten für dich! Pflanzen können tatsächlich *trainiert* werden, um ihren Lichtschutz zu verbessern. Es wurde experimentell beobachtet, dass Pflanzen, die bereits früher Licht ausgesetzt waren, anders auf Licht reagieren als solche, die zum ersten Mal Licht ausgesetzt wurden! Dieses Phänomen wird manchmal als **kurzfristiges Lichtgedächtnis** bezeichnet, und wir wissen jetzt, welcher molekulare Mechanismus diesen Effekt verursacht. Wir haben dieses Wissen genutzt, um das Verhalten mit einem mathematischen Modell darzustellen. Jetzt kannst du deine eigenen **Gedächtnisexperimente** durchführen. Mit den sieben Schiebereglern unten können Sie verschiedene Szenarien simulieren. Siehst du, wie sich das Fluoreszenzsignal zwischen den verschiedenen Experimentierphasen unterscheidet? Indem du die Umwandlungsraten für Zeaxanthin und Violaxanthin veränderst, kannst du auch mit einer mutierten Version der Pflanze spielen, bei der du das Gedächtnis der Pflanze verändern kannst."

#: pages/plant_memory.py:260
msgid "MEM_SLIDER_TRAINING"
msgstr "Trainingsphase in Minuten"

#: pages/plant_memory.py:262
msgid "MEM_SLIDER_RELAXATION"
msgstr "Erholungsphase in Minuten"

#: pages/plant_memory.py:264
msgid "MEM_SLIDER_MEMORY"
msgstr "Gedächtnisphase in Minuten"

#: pages/plant_memory.py:113
msgid "MEM_ANNO_TRAINING"
msgstr "Training"

#: pages/plant_memory.py:113
msgid "MEM_ANNO_RELAXATION"
msgstr "Erholung"

#: pages/plant_memory.py:113
msgid "MEM_ANNO_MEMORY"
msgstr "Gedächtnis"

#: pages/first_analysis.py:262
msgid "MEM_GUIDING_EXPANDER"
msgstr "Hast du Schwierigkeiten, die Simulationsergebnisse mit der Biologie zu verbinden? Versuche es mit unseren **Leitfragen**."

#: pages/first_analysis.py:262
msgid "MEM_GUIDING_HEADER"
msgstr "### Leitfragen"

#: pages/first_analysis.py:262
msgid "MEM_GUIDING_TOGGLE"
msgstr "**Siehe unsere Interpretation**"

#: pages/first_analysis.py:262
msgid "MEM_GUIDING_QUESTIONS"
msgstr "Mit den Standardwerten zeigt die nachstehende Simulation ein typisches Experiment, das das Lichtgedächtnis der Pflanze darstellt. Um es weiter zu untersuchen, könnten Sie Folgendes versuchen:\n"
"1. :blue[Die Lichtintensität und -dauer während der Trainingsphase bestimmen den Umfang des Lichtgedächtnisses. Wie reagiert die Pflanze, wenn man sie verändert?\n"
" - Ändere die Dauer der Trainingsphase zunächst auf 1 Minute und dann auf 5 Minuten. Wirkt sich das auf das spätere Verhalten aus?\n"
" - Setzen Sie nun die Lichtintensität auf 500 μmol&nbsp;m⁻²&nbsp;s⁻¹? Siehst du eine Veränderung in der Gedächtnisphase? \n"
" - Verringere die Zeit der Trainingsphase wieder schrittweise auf 1 Minute. Wie erklärst du dir, was du siehst?\n"
"2. :blue[Die Entspannungsphase ermöglicht es der Pflanze, den vorherigen Stress zu 'vergessen'. Stelle dir vor, wie sich eine Änderung ihrer Dauer auf die spätere Gedächtnisphase auswirken würde.\n"
" - Setze die Dauer der Entspannungsphase auf null Minuten. Was bedeutet das für die Pflanze?\n"
" - Erhöhe nun schrittweise die Dauer der Entspannungsphase. Was ändert sich? Wie erklärst du dir das?\n"
"3. :blue[Simuliere mit deinem bisherigen Wissen ein Experiment, das den Gedächtniseffekt der Pflanze am besten zeigt. Denke daran, dass du im Labor möglicherweise zeitsparende, kürzere Experimente vorziehst]."

#: pages/first_analysis.py:262
msgid "MEM_GUIDING_ANSWERS"
msgstr "Mit den Standardwerten zeigt die nachstehende Simulation ein typisches Experiment, das das Lichtgedächtnis der Pflanze darstellt. Um es weiter zu untersuchen, könnten Sie Folgendes versuchen:\n"
"1. :blue[Die Lichtintensität und -dauer während der Trainingsphase bestimmen den Umfang des Lichtgedächtnisses. Wie reagiert die Pflanze, wenn man sie verändert?\n"
"   - Ändere die Dauer der Trainingsphase zunächst auf 1 Minute und dann auf 5 Minuten. Wirkt sich das auf das spätere Verhalten aus?\n"
"   - Setzen Sie nun die Lichtintensität auf 500 μmol&nbsp;m⁻²&nbsp;s⁻¹? Siehst du eine Veränderung in der Gedächtnisphase? \n"
"   - Verringere die Zeit der Trainingsphase wieder schrittweise auf 1 Minute. Wie erklärst du dir, was du siehst?\n"
"2. :blue[Die Entspannungsphase ermöglicht es der Pflanze, den vorherigen Stress zu 'vergessen'. Stelle dir vor, wie sich eine Änderung ihrer Dauer auf die spätere Gedächtnisphase auswirken würde.\n"
"   - Setze die Dauer der Entspannungsphase auf null Minuten. Was bedeutet das für die Pflanze?\n"
"   - Erhöhe nun schrittweise die Dauer der Entspannungsphase. Was ändert sich? Wie erklärst du dir das?\n"
"3. :blue[Simuliere mit deinem bisherigen Wissen ein Experiment, das den Gedächtniseffekt der Pflanze am besten zeigt. Denke daran, dass du im Labor möglicherweise zeitsparende, kürzere Experimente vorziehst]."



#: Conclusion
#: pages/conclusion.py:13
msgid "CON_HEADLINE_CONCLUSION"
msgstr "# Fazit"

# Grammarly checked
#: pages/conclusion.py:15
msgid "CON_CONCLUSION_TEXT_ONE"
msgstr "Wir hoffen, dass du auf dieser Website eine gründliche Einführung in die faszinierende Welt der (Computer-) Pflanzenbiologie erhalten hast. Anhand von Diagrammen, die mit Computermodellen erstellt wurden, hast du Erkenntnisse über die Auswirkungen der Lichtintensität auf die Photosynthese gewonnen und dich mit dem Thema Kurzzeitgedächtnis von Pflanzen beschäftigt. Wir hoffen, dass wir Ihnen folgendes zeigen konnten:\n"
"- Die Lichtintensität hat einen erheblichen Einfluss auf die Photosyntheserate von Pflanzen. Mit zunehmender Lichtintensität nimmt die Photosyntheserate bis zu einem gewissen Grad zu.\n"
"- Die Beziehung zwischen Lichtintensität und Photosyntheserate ist nicht linear. Vielmehr folgt sie einer Kurve, die an einem bestimmten Sättigungspunkt ihren Höhepunkt erreicht, wie in der Abbildung unten dargestellt."

# Grammarly checked     
#: pages/conclusion.py:19
msgid "CON_CONCLUSION_TEXT_TWO"
msgstr "- Pflanzen können sich an frühere Lichteinwirkungen erinnern und ihre Photosyntheseraten entsprechend anpassen. Dieses Kurzzeitgedächtnis ermöglicht es ihnen, Lichtenergie zu absorbieren und sich effizient an verschiedene Umweltbedingungen anzupassen.\n"
" - Wir glauben, dass die Messung von PAM eine spannende und effektive Methode ist, um mehr über die komplizierten Mechanismen zu erfahren, die dem Wachstum und der Entwicklung von Pflanzen zugrunde liegen.\n"
"\n Abschließend möchten wir dich bitten, über diese Ergebnisse und ihre weiterreichenden Auswirkungen auf unser Verständnis der natürlichen Welt nachzudenken. Dadurch wirst du in der Lage sein, die bemerkenswerte Komplexität und Großartigkeit des Pflanzenreichs zu erkennen und zu bewundern.\n\n Computermodelle gibt es für fast alle wissenschaftlichen Disziplinen, und selbst wenn wir nur Photosynthesemodelle betrachten, haben wir kaum an der Oberfläche dessen gekratzt, was es gibt. Hoffentlich hat Ihnen dieser kleine Kurs gezeigt, wie interessant und nützlich die Modellierung sein kann. Bei einem Problem in der Zukunft wirst du denken: '*Könnte mir ein Modell dabei helfen*?'.\n\n **Aber vor allem hoffen wir, dass du Spaß an unserem Kurs hattest. Wenn du möchtest, gib uns ein Feedback und erzähle anderen von deinen Erfahrungen. Wir wünschen dir einen schönen Tag!**"

#: pages/contact.py:17
msgid "CONT_HEADER"
msgstr "Kontaktiere uns!"

#: pages/contact.py:19
msgid "CONT_SUBHEADER"
msgstr "Wir freuen uns über dein Feedback und deine Fragen zu unserem Projekt! Hier sind die besten Möglichkeiten, mit unseren Teammitgliedern in Kontakt zu treten:"

#: pages/contact.py:23
#: pages/contact.py:29
msgid "CONT_EMAIL"
msgstr "Email:"

#: pages/contact.py:24
#: pages/contact.py:30
msgid "CONT_TOPICS"
msgstr "Themen:"

#: pages/contact.py:31
msgid "CONT_WEBSITE"
msgstr "Website:"

#: pages/contact.py:24
msgid "CONT_TOPICS_SARAH"
msgstr "Bildung, Motivation hinter der Plattform und allgemeine Anliegen"

#: pages/contact.py:24
msgid "CONT_TOPICS_TOBIAS"
msgstr "Fluoreszenzmessmethoden und Modellierung der Photosynthese"

#: pages/contact.py:37
msgid "CONT_TOPICS_ELOUEN"
msgstr "Verfügbare Computermodelle der Photosynthese, SIR-Modell, französische Übersetzung und Graphdesign"

#: pages/contact.py:44
msgid "CONT_TOPICS_MARVIN"
msgstr "Technische Fragen zur Plattform, Programmierung und Softwareentwicklung"

#: pages/contact.py:51
msgid "CONT_TOPICS_LISA"
msgstr "Forschung zur Photosynthese im Kontext des Klimawandels"

#: pages/contact.py:58
msgid "CONT_TOPICS_ANNA"
msgstr "Allgemeine Projektanfragen, computergestützte Modellierung und Photosynthese"

#: pages/contact.py:62
msgid "CONT_HOURS"
msgstr "Bitte beachte, dass unsere Teammitglieder aufgrund ihrer Zeitpläne und Verantwortlichkeiten unterschiedliche Antwortzeiten haben können. Wir werden unser Bestes tun, um deine Nachrichten so schnell wie möglich zu beantworten."

#: pages/contact.py:64
msgid "CONT_THANKS"
msgstr "Vielen Dank für dein Interesse an unserem Projekt!"

#: pages/contact.py:66
msgid "CONT_RESOURCES"
msgstr "### Ressourcen"
